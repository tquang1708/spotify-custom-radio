{"version":3,"sources":["main/HandleTokenExpiry.js","main/userinfo/UserInfo.js","main/common/FoldButton.js","main/common/DeleteButton.js","main/common/Entry.js","main/common/SearchSubsection.js","main/common/PlaylistSubsection.js","main/common/Subsection.js","main/search/SearchResult.js","main/search/Search.js","main/search/useVisibleComponent.js","main/playlist/Playlist.js","options.js","main/submit/Submit.js","Footer.js","outro/Outro.js","main/Main.js","intro/Intro.js","intro/Callback.js","intro/Error.js","App.js","reportWebVitals.js","index.js"],"names":["handleTokenExpiry","accessTokenTimestamp","sessionStorage","getItem","Date","now","window","removeItem","alert","location","reload","UserInfo","props","setUserID","setUserPlaylists","useState","userName","setUserName","useEffect","requestOptions","method","headers","fetch","then","response","json","data","catch","error","console","log","fetchPlaylistsURL","URL","searchParams","set","offset","playlistIDs","href","forEach","playlist","Object","keys","length","className","style","cursor","onClick","FoldButton","isVisible","showSubsection","DeleteButton","artistID","albumID","isSubsection","isDiscography","setPlaylist","newPlaylist","Entry","mainName","subName","artistName","imageUrl","isSearchResult","hasSubsection","subsection","setQuery","setResultVisible","setShowSubsection","newAlbum","name","discography","topTracks","albums","src","alt","width","height","padding","SearchSubsection","artistUrl","Set","PlaylistSubsection","title","Subsection","subsectionItems","map","i","push","SearchResult","query","artistResults","setArtistResults","albumResults","setAlbumResults","offsetArtist","setOffsetArtist","offsetAlbum","setOffsetAlbum","fetchURL","artists","items","limitArtist","limitAlbum","artistItems","slice","artist","g","split","w","charAt","toUpperCase","join","images","at","url","albumItems","album","id","a","onMouseDownPreventDefault","e","preventDefault","onMouseDown","Search","initial","setIsVisible","ref","useRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","useVisibleComponent","visible","type","placeholder","value","onChange","onFocus","trim","Playlist","playlistItems","textAlign","alignSelf","color","fontStyle","values","options","handleRequest","ok","status","timeout","parseInt","get","Promise","r","setTimeout","alertMessage","getAlbumTrackURIs","trackURIs","track","add","shuffle","array","rem","Math","floor","random","temp","Submit","playlistSelect","userID","userPlaylists","playlistName","setTracksFetched","setTracksFetchFinished","setPlaylistName","setPlaylistLink","setAppInUsage","setPlaylistCreated","createPlaylist","setCreatePlaylist","appendToPlaylistID","setAppendToPlaylistID","privatePlaylist","setPrivatePlaylist","selectValue","setSelectValue","onClickSubmit","accessToken","getRequestOptions","albumIDs","all","size","Array","from","albumURIs","playlistID","finalPlaylistName","createPlaylistJSON","public","description","createRequestOptions","body","JSON","stringify","createURL","getPlaylistURL","trackURIArray","addTracksURL","ceil","chunkIndex","trackURIIndex","toAddURIs","addTracksJSON","uris","addRequestOptions","playlistOptions","includes","Footer","text","footerText","selfAdvertising","position","zIndex","bottom","right","fontSize","Outro","flavorText","tracksFetched","tracksFetchFinished","playlistCreated","playlistLink","loadingText","setLoadingText","intervalID","setInterval","clearInterval","rel","to","disclaimer","Main","appInUsage","Intro","spotifyState","possible","generateRandomString","authorizeURL","setItem","Callback","setHasError","setAuthorized","URLSearchParams","hash","substring","access_token","responseState","valid","Error","App","hasError","authorized","authorizedSession","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8cf72ef9.chunk.js","sourcesContent":["export default function handleTokenExpiry() {\n    const accessTokenTimestamp = sessionStorage.getItem(\"access_token_timestamp\");\n    if (Date.now() - accessTokenTimestamp > 3300000) {\n        window.sessionStorage.removeItem(\"authorized\");\n        window.sessionStorage.removeItem(\"access_token\");\n        window.sessionStorage.removeItem(\"access_token_timestamp\");\n        alert(\"Your login token has expired. Please login again.\");\n        window.location.reload()\n    }\n};","import { useState, useEffect } from 'react';\nimport handleTokenExpiry from '../HandleTokenExpiry';\nimport './UserInfo.css';\n\nfunction UserInfo(props) {\n    const { setUserID, setUserPlaylists } = props;\n\n    const handleLogout = () => {\n        window.sessionStorage.removeItem(\"authorized\");\n        window.sessionStorage.removeItem(\"access_token\");\n        window.sessionStorage.removeItem(\"access_token_timestamp\");\n        alert(\"You have been logged out successfully.\");\n        window.location.reload();\n    }\n\n    const [ userName, setUserName ] = useState(\"\");\n    useEffect(() => {\n        handleTokenExpiry();\n        const accessToken = window.sessionStorage.getItem(\"access_token\");\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer ' + accessToken,\n            }\n        };\n\n        const fetchURL = 'https://api.spotify.com/v1/me';\n        fetch(fetchURL, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setUserName(data[\"display_name\"]);\n                setUserID(data[\"id\"]);\n            })\n            .catch(error => {\n                setUserName(\"<error>\");\n                console.log(error);\n            });\n\n        const fetchPlaylistsURL = new URL('https://api.spotify.com/v1/me/playlists');\n        fetchPlaylistsURL.searchParams.set('limit', 50);\n        let offset = 0;\n        let playlistIDs = {};\n        while (true) {\n            fetchPlaylistsURL.searchParams.set('offset', offset);\n    \n            fetch(fetchPlaylistsURL.href, requestOptions)\n                .then(response => response.json())\n                .then(data => {\n                    data[\"items\"].forEach((playlist) => {\n                        playlistIDs[playlist[\"id\"]] = playlist[\"name\"];\n                    });\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n\n            if (Object.keys(playlistIDs).length < 50) {\n                break;\n            } else {\n                offset += 50;\n            }\n        };\n        setUserPlaylists(playlistIDs);\n\n        return () => {\n            setUserName(\"\");\n            setUserID(\"\");\n            setUserPlaylists({});\n\n        };\n    }, [ setUserID, setUserPlaylists ]);\n\n    return (\n        <div className=\"userinfo\">\n            <div>Logged in as<strong>&nbsp;{userName}&nbsp;</strong></div>\n            <div style={{cursor: \"pointer\"}} onClick={handleLogout}><u>(Log Out)</u></div>\n        </div>\n    );\n};\n\nexport default UserInfo;\n","import './Button.css';\n\nfunction FoldButton(props) {\n    const { isVisible, showSubsection } = props;\n\n    if (isVisible) {\n        return (\n            <div \n                className=\"main-button main-visible-button\">\n                {showSubsection ? \"—\" : \"+\"}\n            </div>\n        );\n    } else {\n        return (<div className=\"main-button\"></div>);\n    };\n}\n\nexport default FoldButton;","import './Button.css';\n\nfunction DeleteButton(props) {\n    const {\n        artistID,\n\t    albumID,\n        isSubsection,\n\t    isDiscography,\n        playlist,\n        setPlaylist,} = props;\n\n    const onClickDeleteItem = () => {\n        let newPlaylist = {...playlist};\n\n        if (!isDiscography && isSubsection) {\n            if (albumID) {\n                delete newPlaylist[artistID][\"albums\"][albumID];\n            } else {\n                newPlaylist[artistID][\"topTracks\"] = false;\n            };\n\n            if (!(newPlaylist[artistID][\"topTracks\"]) \n                && Object.keys(newPlaylist[artistID][\"albums\"]).length === 0) {\n                    delete newPlaylist[artistID];\n            };\n        } else {\n            delete newPlaylist[artistID];\n        };\n\n        setPlaylist(newPlaylist);\n    };\n\n    return (\n        <div\n            className=\"main-button main-visible-button main-delete-button\"\n            onClick={onClickDeleteItem} >\n            {\"X\"}\n        </div>\n    );\n};\n\nexport default DeleteButton;\n","import { useState } from 'react';\nimport FoldButton from './FoldButton';\nimport DeleteButton from './DeleteButton';\nimport './Entry.css';\n\nfunction Entry(props) {\n    const { mainName,\n            subName, \n            artistName,\n            artistID,\n            albumID,\n            imageUrl, \n            isSearchResult, \n            hasSubsection, \n            subsection, \n            playlist, \n            setPlaylist,\n            setQuery, \n            setResultVisible } = props;\n    const [ showSubsection, setShowSubsection ] = useState(false);\n\n    const onClickShowSubsection = () => setShowSubsection(!showSubsection);\n    const onClickAddAlbum = () => {\n        let newPlaylist = {...playlist};\n        if (artistID in playlist) {\n            if (newPlaylist[artistID]['discography']) {\n                alert(\"You already added this artist's discography\");\n            } else {\n                newPlaylist[artistID]['albums'][albumID] = mainName;\n            }\n        } else {\n\t    let newAlbum = {};\n\t    newAlbum[albumID] = mainName;\n            newPlaylist[artistID] = {\n                name: artistName,\n                imageUrl: imageUrl,\n                discography: false,\n                topTracks: false,\n                albums: newAlbum,\n            }\n        };\n        setPlaylist(newPlaylist);\n        setResultVisible(false);\n        setQuery(\"\");\n    };\n\n    return (\n        <div className=\"main-entry\">\n            <div className=\"main-entry-details\">\n                <div\n                    className=\"main-entry-details-left\"\n                    onClick={isSearchResult && !hasSubsection ? onClickAddAlbum : onClickShowSubsection}>\n                    <FoldButton \n                        isVisible={hasSubsection}\n                        showSubsection={showSubsection} />\n                    <img \n                        src={imageUrl}\n                        alt=\"\"\n                        style={{width: '90px', height: '90px', padding: '5px'}}\n                    ></img>\n                    <div>\n                        <h3>{mainName}</h3>\n                        <p>{subName}</p>\n                    </div>\n                </div>\n                {(!isSearchResult) && \n                    <DeleteButton \n                        artistID={artistID}\n                        playlist={playlist}\n                        setPlaylist={setPlaylist} />}\n            </div>\n            {showSubsection && subsection}\n        </div>\n    );\n}\n\nexport default Entry;\n","function SearchSubsection(props) {\n    const { playlist,\n            artistID,\n            artistName,\n            artistUrl,\n            isDiscography,\n            setPlaylist,\n            setResultVisible,\n            setQuery } = props;\n\n    const onClickAddItem = () => {\n        let newPlaylist = {...playlist};\n\n        if (artistID in playlist) {\n            if (isDiscography) {\n                newPlaylist[artistID]['discography'] = true;\n                newPlaylist[artistID]['topTracks'] = false;\n                newPlaylist[artistID]['albums'] = new Set([]);\n            } else {\n                if (newPlaylist[artistID]['discography']) {\n                    alert(\"You already added this artist's discography\");\n                } else {\n                    newPlaylist[artistID]['topTracks'] = true;\n                }\n            }\n        } else {\n            newPlaylist[artistID] = {\n                name: artistName,\n                imageUrl: artistUrl,\n                discography: isDiscography,\n                topTracks: !isDiscography,\n                albums: {},\n            }\n        };\n        setPlaylist(newPlaylist);\n\n        setResultVisible(false);\n        setQuery(\"\");\n    }\n\n    return (\n        <div \n            className=\"main-entry-subsection-item\"\n            onClick={onClickAddItem}>\n            {isDiscography ? \"Add Discography\" : \"Add Top 10 Tracks\"}\n        </div>\n    );   \n}\n\nexport default SearchSubsection;\n","import DeleteButton from \"./DeleteButton\";\n\nfunction PlaylistSubsection(props) {\n    const { artistID,\n            albumID,\n            title,\n\t        isDiscography,\n            playlist,\n            setPlaylist } = props\n\n    return (\n        <div \n            className=\"main-entry-subsection-item\">\n            {title}\n            <DeleteButton \n                artistID={artistID}\n                albumID={albumID}\n                isSubsection={true}\n\t    \t    isDiscography={isDiscography}\n                playlist={playlist}\n                setPlaylist={setPlaylist} />\n        </div>\n    );\n}\n\nexport default PlaylistSubsection;\n","import SearchSubsection from \"./SearchSubsection\";\nimport PlaylistSubsection from \"./PlaylistSubsection\";\nimport './Subsection.css';\n\nfunction Subsection(props) {\n    const { artistID,\n            artistName,\n            artistUrl,\n            isSearchResult,\n            playlist,\n            setPlaylist,\n            setQuery,\n            setResultVisible } = props\n\n    let subsectionItems = [];\n    if (isSearchResult) {\n        subsectionItems = [true, false].map((i) => {\n            return <SearchSubsection \n\t\t        key={\"search subsection\" + artistID + i}\n                playlist={playlist}\n                artistID={artistID}\n                artistName={artistName}\n                artistUrl={artistUrl}\n                isDiscography={i}\n                setPlaylist={setPlaylist}\n                setResultVisible={setResultVisible}\n                setQuery={setQuery}\n            />;\n        });\n    } else {\n        if (playlist[artistID][\"discography\"]) {\n            subsectionItems.push(\n                <PlaylistSubsection \n                    key={\"playlist subsection\" + artistID + \"discography\"}\n                    artistID={artistID}\n                    title={\"Discography\"}\n\t\t            isDiscography={true}\n                    playlist={playlist}\n                    setPlaylist={setPlaylist}\n                />\n            );\n        } else {\n            if (playlist[artistID][\"topTracks\"]) {\n                subsectionItems.push(\n                    <PlaylistSubsection \n                        key={\"playlist subsection\" + artistID + \"toptracks\"}\n                        artistID={artistID}\n                        title={\"Top Tracks\"}\n\t\t\t            isDiscography={false}\n                        playlist={playlist}\n                        setPlaylist={setPlaylist}\n                    />\n                );\n            };\n\n            Object.keys(playlist[artistID][\"albums\"]).forEach((albumID) => {\n                subsectionItems.push(\n                    <PlaylistSubsection \n                        key={\"playlist subsection\" + artistID + albumID}\n                        artistID={artistID}\n                        albumID={albumID}\n                        title={`(album) ${playlist[artistID][\"albums\"][albumID]}`}\n\t\t\t            isDiscography={false}\n                        playlist={playlist}\n                        setPlaylist={setPlaylist}\n                    />\n                );\n            });\n        }\n    }\n\n    return (\n        <div className=\"main-entry-subsection\">\n            {subsectionItems}\n        </div>\n    );\n}\n\nexport default Subsection;\n","import { useState, useEffect } from 'react';\nimport handleTokenExpiry from '../HandleTokenExpiry';\nimport Entry from '../common/Entry';\nimport Subsection from '../common/Subsection';\n\nfunction SearchResult(props) {\n    const { query,\n            setQuery, \n            playlist, \n            setPlaylist,\n            setResultVisible } = props;\n    const [ artistResults, setArtistResults ] = useState([]);\n    const [ albumResults, setAlbumResults ] = useState([]);\n    const [ offsetArtist, setOffsetArtist ] = useState(0);\n    const [ offsetAlbum, setOffsetAlbum ] = useState(0);\n\n    useEffect(() => {\n        handleTokenExpiry();\n\n        const accessToken = window.sessionStorage.getItem(\"access_token\");\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer ' + accessToken,\n            }\n        };\n        const fetchURL = new URL('https://api.spotify.com/v1/search');\n        fetchURL.searchParams.set('q', query);\n        fetchURL.searchParams.set('market', 'from_token');\n        fetchURL.searchParams.set('type', 'artist,album');\n\n        fetch(fetchURL.href, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setArtistResults(data?.artists?.items);\n                setAlbumResults(data?.albums?.items);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n\n        setOffsetArtist(0);\n        setOffsetAlbum(0);\n\n        return () => {\n            setArtistResults([]);\n            setAlbumResults([]);\n        }\n    }, [ query ]);\n\n    const limitArtist = artistResults ? artistResults.length : 0;\n    const limitAlbum = albumResults ? albumResults.length : 0;\n\n    const artistItems = artistResults?.slice(offsetArtist, offsetArtist + 5).map((artist) => \n        <Entry\n            key={\"search result\" + artist[\"id\"]}\n            mainName={artist[\"name\"]}\n            subName={artist[\"genres\"].map((g) => g.split(' ').map((w) => w.charAt(0).toUpperCase() + w.slice(1)).join(' ')).join(', ')}\n            artistID={artist[\"id\"]}\n            imageUrl={artist.images?.at(-1)?.url}\n            isSearchResult={true}\n            hasSubsection={true}\n            subsection={<Subsection\n                artistID={artist[\"id\"]}\n                artistName={artist[\"name\"]}\n                artistUrl={artist.images?.at(-1)?.url}\n                isSearchResult={true}\n                playlist={playlist}\n                setPlaylist={setPlaylist}\n                setQuery={setQuery}\n                setResultVisible={setResultVisible} />}\n            playlist={playlist}\n            setPlaylist={setPlaylist}\n            setQuery={setQuery}\n        />\n    );\n    const albumItems = albumResults?.slice(offsetAlbum, offsetAlbum + 5).map((album) => \n        <Entry\n            key={\"search result\" + album[\"id\"]}\n            artistName={album.artists?.at(0).name}\n            artistID={album.artists?.at(0).id}\n            albumID={album[\"id\"]}\n            mainName={album[\"name\"]}\n            subName={album[\"artists\"].map((a) => a[\"name\"]).join(', ')}\n            imageUrl={album.images?.at(0)?.url}\n            isSearchResult={true}\n            hasSubsection={false}\n            playlist={playlist}\n            setPlaylist={setPlaylist}\n            setResultVisible={setResultVisible}\n            setQuery={setQuery}\n        />\n    );\n\n    const onClickDecreaseOffsetArtist = () => setOffsetArtist(offsetArtist - 5);\n    const onClickIncreaseOffsetArtist = () => setOffsetArtist(offsetArtist + 5);\n    const onClickDecreaseOffsetAlbum = () => setOffsetAlbum(offsetAlbum - 5);\n    const onClickIncreaseOffsetAlbum = () => setOffsetAlbum(offsetAlbum + 5);\n    const onMouseDownPreventDefault = (e) => e.preventDefault();\n\n    return (\n        <div className=\"search-searchresult main-component\">\n            <p className=\"main-title\">Artists</p>\n            {artistItems && offsetArtist > 0 &&\n                <div \n                    className=\"main-entry-details search-scroll-buttons\"\n                    onClick={onClickDecreaseOffsetArtist}\n                    onMouseDown={onMouseDownPreventDefault}>\n                    Previous...\n                </div>}\n            {artistItems}\n            {artistItems && offsetArtist + 5 < limitArtist &&\n                <div \n                    className=\"main-entry-details search-scroll-buttons\"\n                    onClick={onClickIncreaseOffsetArtist}\n                    onMouseDown={onMouseDownPreventDefault}>\n                Next...\n                </div>}\n            <p className=\"main-title\">Albums</p>\n            {offsetAlbum > 0 &&\n                <div \n                    className=\"main-entry-details search-scroll-buttons\"\n                    onClick={onClickDecreaseOffsetAlbum}\n                    onMouseDown={onMouseDownPreventDefault}>\n                    Previous...\n                </div>}\n            {albumItems}\n            {albumItems && offsetAlbum + 5 < limitAlbum &&\n                <div \n                    className=\"main-entry-details search-scroll-buttons\"\n                    onClick={onClickIncreaseOffsetAlbum}\n                    onMouseDown={onMouseDownPreventDefault}>\n                    Next...\n                </div>}\n        </div>\n    );\n}\n\nexport default SearchResult;\n","import { useState, useEffect } from 'react';\nimport useVisibleComponent from './useVisibleComponent';\nimport SearchResult from './SearchResult';\nimport './Search.css';\n\nfunction Search(props) {\n    const { playlist, setPlaylist } = props;\n\n    const [ ref, visible, setResultVisible ] = useVisibleComponent(false);\n    const [ query, setQuery ] = useState(\"\");\n\n    useEffect(() => {\n        if (query) {\n            setResultVisible(true);\n        } else {\n            setResultVisible(false);\n        }\n    }, [ query, setResultVisible ]);\n\n    const onChangeSetQuery = e => setQuery(e.target.value);\n    const onFocusSetVisible = () => setResultVisible(true);\n\n    return (\n        <div ref={ref}>\n            <div className=\"search\">\n                <input\n                    className=\"search-searchbar main-component\"\n                    type=\"text\"\n                    placeholder=\"Search...\"\n                    value={query}\n                    onChange={onChangeSetQuery}\n                    onFocus={onFocusSetVisible}\n                />\n                {query && visible &&\n                    <SearchResult\n                        query={query.trim()}\n                        setQuery={setQuery}\n                        playlist={playlist}\n                        setPlaylist={setPlaylist}\n                        setResultVisible={setResultVisible}\n                    />\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Search;","import { useState, useEffect, useRef } from 'react';\n\nexport default function useVisibleComponent(initial) {\n    const [ isVisible, setIsVisible ] = useState(initial);\n    const ref = useRef(null);\n\n    const handleClickOutside = (event) => {\n        if (ref.current && !ref.current.contains(event.target) && isVisible) {\n            setIsVisible(false);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('click', handleClickOutside, true);\n        return () => {\n            document.removeEventListener('click', handleClickOutside, true);\n        };\n    });\n\n    return [ ref, isVisible, setIsVisible ];\n}","import Entry from '../common/Entry';\nimport Subsection from '../common/Subsection';\nimport './Playlist.css';\n\nfunction Playlist(props) {\n    const { playlist, setPlaylist } = props;\n\n    let playlistItems;\n    if (Object.keys(playlist).length === 0) {\n        playlistItems = \n            <p style={{textAlign: \"center\", alignSelf: \"center\", color: \"var(--text-color-dim)\", fontStyle: \"italic\"}}>\n                This playlist seems a bit empty... Add some songs to it through the search bar above.\n            </p>;\n    } else {\n        playlistItems = Object.keys(playlist).map((i) => {\n            const subsection = \n                <Subsection \n                    artistID={i}\n                    playlist={playlist}\n                    setPlaylist={setPlaylist} />;\n\t\n            let subName = \"\";\n\t        if (playlist[i]['discography']) {\n\t\t        subName = \"Discography\";\n\t        } else {\n\t\t        if (playlist[i]['topTracks']) {\n\t\t            subName = subName + \"Top Tracks, \";\n\t\t        };\n\n\t\t        Object.values(playlist[i]['albums']).forEach((album) => {\n\t\t            subName = subName + \"(album) \" + album + \", \";\n                });\n\n\t\t        subName = subName.slice(0, -2);\n\t        }\n    \n            return <Entry\n                key={\"playlist\" + i}\n                artistID={i}\n                mainName={playlist[i]['name']}\n                subName={subName}\n                imageUrl={playlist[i]['imageUrl']}\n                hasSubsection={true}\n                subsection={subsection}\n                playlist={playlist}\n                setPlaylist={setPlaylist}\n            />\n        });\n    }\n\n    return (\n        <div className=\"main-component playlist\">\n            <p className=\"main-title\">Current Playlist</p>\n            {playlistItems}\n        </div>\n    );\n};\n\nexport default Playlist;\n","export const options = {\n    \"client_id\": \"8e9896a45be540c3b7260c13d4abe33d\",\n    \"redirect_uri\": \"https://tquang1708.github.io/spotify-custom-radio/#/\",\n    \"playlist_description\": \"Your custom radio station, created from tquang1708.github.io/spotify-custom-radio/\",\n    \"enable_rate_limit\": true,\n    \"entry_count_limit\": 50,\n    \"album_count_limit\": 500,\n}\n","import { useState } from 'react';\nimport handleTokenExpiry from '../HandleTokenExpiry';\nimport { options } from '../../options';\nimport './Submit.css';\n\nasync function handleRequest(fetchURL, requestOptions) {\n    let response;\n    while (true) {\n        response = await fetch(fetchURL.href, requestOptions).catch(error => {console.log(error)});\n        if (response.ok) {\n            break;\n        } else {\n            // too many requests\n            if (response.status === 429) {\n                const timeout = parseInt(response.headers.get(\"retry-after\"), 10);\n                await new Promise(r => setTimeout(r, timeout));\n            } else if (response.status === 403) {\n                let alertMessage = \"\";\n                alertMessage += \"403 forbidden. Your login token has expired, probably. Please login again.\\n\\n\";\n                alertMessage += \"If this happened while you were adding tracks to the playlist, this might have been \";\n                alertMessage += \"triggered because the playlist already has 10,000 items, which is Spotify's maximum \";\n                alertMessage += \"permitted size for a playlist.\"\n\n                window.sessionStorage.removeItem(\"authorized\");\n                window.sessionStorage.removeItem(\"access_token\");\n                window.sessionStorage.removeItem(\"access_token_timestamp\");\n                alert(alertMessage);\n                window.location.reload();\n            }\n        }\n    }\n\n    return response;\n}\n\nasync function getAlbumTrackURIs(requestOptions, albumID) {\n    let trackURIs = new Set([]);\n\n    const fetchURL = new URL(`https://api.spotify.com/v1/albums/${albumID}/tracks`);\n    fetchURL.searchParams.set('market', 'from_token');\n    fetchURL.searchParams.set('limit', '50');\n\n    let offset = 0;\n    while (true) {\n        fetchURL.searchParams.set('offset', offset);\n\n        const response = await handleRequest(fetchURL, requestOptions);\n        const data = await response.json().catch(error => console.log(error));\n        const items = data[\"items\"];\n\n        items.forEach((track) => {\n            trackURIs.add(track[\"uri\"]);\n        });\n\n        if (items.length < 50) {\n            break;\n        } else {\n            offset += 50;\n        }\n    }\n\n    return trackURIs;\n}\n\n// fisher-yates shuffle algo\n// taken from https://bost.ocks.org/mike/shuffle/\nfunction shuffle(array) {\n    var i;\n    for (i = array.length - 1; i > 0; i--) {\n        // pick a remaining element\n        const rem = Math.floor(Math.random() * (i + 1));\n        const temp = array[i];\n        array[i] = array[rem];\n        array[rem] = temp;\n    }\n    return array;\n}\n\nfunction Submit(props) {\n    const { userID, \n            userPlaylists,\n            playlist, \n            playlistName, \n            setTracksFetched,\n            setTracksFetchFinished,\n            setPlaylistName, \n            setPlaylistLink,\n            setAppInUsage, \n            setPlaylistCreated } = props;\n    const [ createPlaylist, setCreatePlaylist ] = useState(true);\n    const [ appendToPlaylistID, setAppendToPlaylistID ] = useState(\"\");\n    const [ privatePlaylist, setPrivatePlaylist ] = useState(true);\n    const [ selectValue, setSelectValue ] = useState(\"create private\");\n\n    const onClickSubmit = async () => {\n        handleTokenExpiry();\n\n        if (Object.keys(playlist).length === 0) {\n            alert(\"Your playlist is currently empty. Nothing to be done for now.\");\n        } else if (Object.keys(playlist).length > options[\"entry_count_limit\"] && options[\"enable_rate_limit\"]) {\n            let alertMessage = \"\";\n            alertMessage += `There are more than ${options[\"entry_count_limit\"]} items in your playlist. `\n            alertMessage += \"Please remove some items to free up the app.\\n\\n\"\n            alertMessage += \"Note that you can turn off rate limiting on your local build by \"\n            alertMessage += \"turning off the respective option in options.js\"\n            alert(alertMessage);\n        } else {\n            const accessToken = window.sessionStorage.getItem(\"access_token\");\n            const getRequestOptions = {\n                method: 'GET',\n                headers: {\n                    'Authorization': 'Bearer ' + accessToken,\n                }\n            };\n\n            // gathering track uris and album IDs;\n            let trackURIs = new Set([]);\n            let albumIDs = new Set([]);\n        \n            await Promise.all(Object.keys(playlist).map(async (artistID) => {\n                if (playlist[artistID][\"discography\"]) {\n                    const fetchURL = new URL(`https://api.spotify.com/v1/artists/${artistID}/albums`);\n                    fetchURL.searchParams.set('market', 'from_token');\n                    fetchURL.searchParams.set('include_groups', 'album,single');\n                    fetchURL.searchParams.set('limit', '50');\n\n                    let offset = 0;\n                    while (true) {\n                        fetchURL.searchParams.set('offset', offset);\n                \n                        const response = await handleRequest(fetchURL, getRequestOptions);\n                        const data = await response.json().catch(error => console.log(error));\n                        const items = data[\"items\"];\n                        const itemsIDs = items.map(album => album[\"id\"]);\n                        itemsIDs.forEach(id => albumIDs.add(id));\n                \n                        if (items.length < 50) {\n                            break;\n                        } else {\n                            offset += 50;\n                        }\n                    };\n                } else {\n                    Object.keys(playlist[artistID][\"albums\"]).forEach(id => albumIDs.add(id));\n\n                    if (playlist[artistID][\"topTracks\"]) {\n                        const fetchURL = new URL(`https://api.spotify.com/v1/artists/${artistID}/top-tracks`);\n                        fetchURL.searchParams.set('market', 'from_token');\n\n                        const response = await handleRequest(fetchURL, getRequestOptions);\n                        const data = await response.json().catch(error => console.log(error));\n                        data[\"tracks\"].forEach((track) => {\n                            trackURIs.add(track[\"uri\"]);\n                        }); \n                    };\n                }\n            }));\n\n            // another early rate limit\n            if (options[\"enable_rate_limit\"] && albumIDs.size > options[\"album_count_limit\"]) {\n                let alertMessage = \"\";\n                alertMessage += `There are more than ${options[\"album_count_limit\"]} albums/eps/singles in your playlist. `\n                alertMessage += \"Please remove some items to free up the app.\\n\\n\"\n                alertMessage += \"Note that you can turn off rate limiting on your local build by \"\n                alertMessage += \"turning off the respective option in options.js\"\n                alert(alertMessage);\n            } else {\n                // switch to loading view\n                setAppInUsage(false);\n\n                // populate trackuris\n                await Promise.all(Array.from(albumIDs).map(async (albumID) => {\n                    const albumURIs = await getAlbumTrackURIs(getRequestOptions, albumID);\n                    trackURIs = new Set([...trackURIs, ...albumURIs]);\n                }))\n\n                setTracksFetched(trackURIs.size);\n                setTracksFetchFinished(true);\n\n                // make the playlist\n                let playlistID = \"\";\n                if (createPlaylist) {\n                    const finalPlaylistName = playlistName ? playlistName : \"Custom Radio Station\";\n                    setPlaylistName(finalPlaylistName);\n                    const createPlaylistJSON = {\n                        name: finalPlaylistName,\n                        public: !privatePlaylist,\n                        description: options[\"playlist_description\"]\n                    }\n                    const createRequestOptions = {\n                        method: 'POST',\n                        headers: {\n                            'Authorization': 'Bearer ' + accessToken,\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify(createPlaylistJSON)\n                    };\n                    const createURL = new URL(`https://api.spotify.com/v1/users/${userID}/playlists`);\n                    const response = await handleRequest(createURL, createRequestOptions);\n                    const data = await response.json().catch(error => console.log(error));\n                    playlistID = data[\"id\"];\n                    setPlaylistLink(data[\"external_urls\"][\"spotify\"]);\n                } else {\n                    // or append\n                    playlistID = appendToPlaylistID ? appendToPlaylistID : Object.keys(userPlaylists)[0]\n\n                    const getRequestOptions = {\n                        method: 'GET',\n                        headers: {\n                            'Authorization': 'Bearer ' + accessToken,\n                        }\n                    }\n                    const getPlaylistURL = new URL(`https://api.spotify.com/v1/playlists/${playlistID}`);\n                    const response = await handleRequest(getPlaylistURL, getRequestOptions);\n                    const data = await response.json().catch(error => console.log(error));\n                    setPlaylistName(data[\"name\"]);\n                    setPlaylistLink(data[\"external_urls\"][\"spotify\"]);\n                }\n\n                // populate the playlist\n                const trackURIArray = shuffle(Array.from(trackURIs));\n                const addTracksURL = new URL(`https://api.spotify.com/v1/playlists/${playlistID}/tracks`);\n\n                await Promise.all([...Array(Math.ceil(trackURIArray.length / 100)).keys()].map(async (chunkIndex) => {\n                    const trackURIIndex = chunkIndex * 100;\n                    const toAddURIs = trackURIArray.slice(trackURIIndex, trackURIIndex + 100);\n                    const addTracksJSON = {\n                        uris: toAddURIs,\n                    };\n\n                    const addRequestOptions = {\n                        method: 'POST',\n                        headers: {\n                            'Authorization': 'Bearer ' + accessToken,\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify(addTracksJSON)\n                    };\n                    const response = await handleRequest(addTracksURL, addRequestOptions);\n                    await response.json().catch(error => console.log(error));\n                }));\n            }\n\n            // update finished state\n            setPlaylistCreated(true);\n        }\n    };\n\n    const onChangeUpdatePlaylistName = e => setPlaylistName(e.target.value);\n    const onChangeUpdateAppendPlaylistID = (e) => {\n        setPlaylistName(userPlaylists[e.target.value]);\n        setAppendToPlaylistID(e.target.value);\n    };\n    const onChangeUpdateValue = (e) => {\n        if (e.target.value === \"append\") {\n            if (Object.keys(userPlaylists).length === 0) {\n                alert(\"You have no playlist to append to yet.\");\n            } else {\n                setSelectValue(e.target.value);\n                setCreatePlaylist(false);\n            }\n        } else {\n            setSelectValue(e.target.value);\n            setCreatePlaylist(true);\n            setPlaylistName(\"\");\n            if (e.target.value.includes(\"private\")) {\n                setPrivatePlaylist(true);\n            } else {\n                setPrivatePlaylist(false);\n            }\n        }\n    };\n\n    let playlistSelect;\n    if (createPlaylist) {\n        playlistSelect = \n            <input\n                type=\"text\"\n                value={playlistName}\n                placeholder=\"Playlist Name...\"\n                onChange={onChangeUpdatePlaylistName}\n                style={{\n                    height: \"25px\"\n                }}\n            />\n    } else {\n        const playlistOptions = Object.keys(userPlaylists).map((playlistID) => {\n            return <option key={\"append\" + playlistID} value={playlistID}>{userPlaylists[playlistID]}</option>\n        });\n        playlistSelect = \n            <select\n                value={appendToPlaylistID}\n                onChange={onChangeUpdateAppendPlaylistID}>\n                {playlistOptions}\n            </select>\n    }\n\n    return (\n        <div className=\"submit\">\n            <div className=\"submit-options\">\n                <select\n                    value={selectValue}\n                    onChange={onChangeUpdateValue}>\n                    <option value=\"create private\">Create a new Private Playlist</option>\n                    <option value=\"create public\">Create a new Public Playlist</option>\n                    <option value=\"append\">Append to an existing Playlist</option>\n                </select>\n                {playlistSelect}\n            </div>\n            <div \n                className=\"submit-button main-component\"\n                onClick={onClickSubmit}>\n                Submit\n            </div>\n        </div>\n    );\n}\n\nexport default Submit;\n","function Footer(props) {\n    const { footerText, selfAdvertising } = props;\n\n    let text;\n    if (selfAdvertising) {\n        const githubURL = \"https://github.com/tquang1708/spotify-custom-radio/issues\";\n        text =\n        <div>\n            Created by Quang Tran, October 2021. Utilizing the Spotify API in developer mode, so only email addresses added through the dashboard can utilize it. Forward all your bug reports and/or suggestions to <a href={githubURL}>here.</a>\n        </div>\n    } else {\n        text = <div>{footerText}</div>;\n    }\n\n    return (\n        <div\n            style={{\n                color: \"var(--text-color-dim)\",\n                position: \"fixed\",\n                zIndex: \"-1\",\n                bottom: \"5px\",\n                right: \"5px\",\n                fontSize: \"0.7em\",\n                textAlign: \"right\"\n            }} >\n            {text}\n        </div>\n    );\n}\n\nexport default Footer;\n","import Footer from '../Footer';\nimport '../App.css';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Outro(props) {\n    const { tracksFetched,\n            tracksFetchFinished,\n            playlistCreated, \n            playlistName, \n            playlistLink,\n            setAppInUsage,\n            setPlaylistCreated } = props;\n    const [ loadingText, setLoadingText ] = useState(\".\");\n\n    useEffect(() => {\n        function updateLoadingText() {\n            if (loadingText.length === 5) {\n                setLoadingText(\".\");\n            } else {\n                setLoadingText(loadingText + \".\");\n            }\n        }\n\n        const intervalID = setInterval(updateLoadingText, 350);\n\n        return () => {\n            clearInterval(intervalID);\n        };\n    }, [ loadingText ]);\n\n    const onClickResetState = () => {\n        setAppInUsage(true);\n        setPlaylistCreated(false);\n        window.location.reload();\n    };\n\n    if (!playlistCreated) {\n        let disclaimer = \"It might take a while to build the playlist for larger playlists \";\n        disclaimer += \"or during times when the site is busy due to rate limiting on \"\n        disclaimer += \"Spotify's API.\"\n\n        let flavorText;\n        if (!tracksFetchFinished) {\n            flavorText = <div>Fetching Tracks{loadingText}</div>;\n        } else {\n            flavorText = <div><span style={{color: \"var(--highlight-color)\"}}>{tracksFetched}</span> Tracks Found. Adding{loadingText}</div>;\n        }\n\n        return (\n            <div className=\"center-element\">\n                <p className=\"center-text\">\n                    Constructing <span style={{color: \"var(--highlight-color)\"}}>Playlist</span>\n                    <br/>{flavorText}\n                </p>\n                <Footer footerText={disclaimer} />\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"center-element\">\n                <p className=\"center-text\">\n                    Playlist <a href={playlistLink} target=\"_blank\" rel=\"noreferrer\" >{playlistName}</a> Finished!\n                    <Link to=\"/\" onClick={onClickResetState}>&nbsp;Start Again?</Link>\n                </p>\n                <Footer selfAdvertising={true} />\n            </div>\n        );\n    }\n}\n\nexport default Outro;","import { useState, useEffect } from 'react';\nimport UserInfo from './userinfo/UserInfo';\nimport Search from './search/Search';\nimport Playlist from './playlist/Playlist';\nimport Submit from './submit/Submit';\nimport Outro from '../outro/Outro';\nimport Footer from '../Footer';\nimport './Main.css';\n\nfunction Main() {\n    const [ playlist, setPlaylist ] = useState({});\n    const [ userID, setUserID ] = useState(\"\");\n    const [ userPlaylists, setUserPlaylists ] = useState({});\n    const [ tracksFetched, setTracksFetched ] = useState(0);\n    const [ tracksFetchFinished, setTracksFetchFinished ] = useState(false);\n    const [ playlistName, setPlaylistName ] = useState(\"\");\n    const [ playlistLink, setPlaylistLink ] = useState(\"\");\n    const [ appInUsage, setAppInUsage ] = useState(true);\n    const [ playlistCreated, setPlaylistCreated ] = useState(false);\n\n    useEffect(() => {\n        setTimeout(() => {\n            window.sessionStorage.removeItem(\"authorized\");\n            window.sessionStorage.removeItem(\"access_token\");\n            window.sessionStorage.removeItem(\"access_token_timestamp\");\n            alert(\"Your login token has expired. Please login again.\");\n            window.location.reload()\n\t    }, 3300000);\n    }, []);\n\n    if (appInUsage) {\n        let disclaimer = \"\";\n        disclaimer += \"Note that the Discography option only includes all Albums, \"\n        disclaimer += \"Singles and EPs and do not include Compilations or Apperances \"\n        disclaimer += \"on other artists' albums.\";\n\n        return (<div className=\"main\">\n            <UserInfo \n                setUserID={setUserID}\n                setUserPlaylists={setUserPlaylists} />\n            <Search\n                playlist={playlist}\n                setPlaylist={setPlaylist} />\n            <Playlist\n                playlist={playlist} \n                setPlaylist={setPlaylist} />\n            <Submit\n                userID={userID}\n                userPlaylists={userPlaylists}\n                playlist={playlist}\n                playlistName={playlistName}\n                setTracksFetched={setTracksFetched}\n                setTracksFetchFinished={setTracksFetchFinished}\n                setPlaylistName={setPlaylistName}\n                setPlaylistLink={setPlaylistLink}\n                setAppInUsage={setAppInUsage}\n                setPlaylistCreated={setPlaylistCreated} />\n            <Footer footerText={disclaimer} />\n        </div>\n        );\n    } else {\n        return(\n            <Outro \n                tracksFetched={tracksFetched}\n                tracksFetchFinished={tracksFetchFinished}\n                playlistName={playlistName}\n                playlistLink={playlistLink}\n                playlistCreated={playlistCreated}\n                setAppInUsage={setAppInUsage}\n                setPlaylistCreated={setPlaylistCreated} />\n        );\n    };\n}\n\nexport default Main;\n","import Footer from '../Footer';\nimport '../App.css';\nimport { options } from '../options';\n\n// taken from https://github.com/spotify/web-api-auth-examples/blob/master/implicit_grant/public/index.html\nfunction generateRandomString(length) {\n    var text = '';\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (var i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    };\n\n    return text;\n};\n\nfunction Intro() {\n    const spotifyState = generateRandomString(16);\n    const scope = \"playlist-modify-private playlist-modify-public user-read-private\";\n\n    const authorizeURL = new URL(`https://accounts.spotify.com/authorize`);\n    authorizeURL.searchParams.set('client_id', options['client_id']);\n    authorizeURL.searchParams.set('redirect_uri', options['redirect_uri']);\n    authorizeURL.searchParams.set('response_type', 'token');\n    authorizeURL.searchParams.set('state', spotifyState);\n    authorizeURL.searchParams.set('scope', scope);\n\n    sessionStorage.setItem('spt_auth_state', spotifyState);\n\n    return (\n        <div className=\"center-element\">\n            <div className=\"center-text\">\n                <a href={authorizeURL.href}>\n                    Login to Spotify\n                </a>&nbsp;to begin\n            </div>\n            <Footer selfAdvertising={true} />\n        </div>\n    );\n}\n\nexport default Intro;","import { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nfunction Callback(props) {\n    const { setHasError, setAuthorized } = props;\n\n    const response = new URLSearchParams(window.location.hash.substring(2));\n\n    const spotifyState = sessionStorage.getItem(\"spt_auth_state\");\n    const access_token = response.get(\"access_token\");\n    const error = response.get(\"error\");\n    const responseState = response.get(\"state\");\n\n    const valid = access_token && (spotifyState === responseState);\n    // const valid = false;\n\n    useEffect (() => {\n        if (valid) {\n            sessionStorage.setItem(\"authorized\", \"true\");\n            sessionStorage.setItem(\"access_token\", access_token);\n            sessionStorage.setItem(\"access_token_timestamp\", Date.now());\n            sessionStorage.removeItem(\"spt_auth_state\");\n            setAuthorized(true);\n        } else {\n            console.log(error);\n            setHasError(true);\n        }\n    });\n\n    if (valid) {\n        return <Redirect to=\"/\"/>\n    } else {\n        return <Redirect to=\"/error/\"/>\n    };\n};\n\nexport default Callback;","import { Link } from 'react-router-dom';\n\nfunction Error() {\n    return (\n        <div className=\"center-element center-text\">\n            An error occurred. Please try to <Link to=\"/\">login again.</Link>\n        </div>\n    );\n}\n\nexport default Error;","import { useState } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport './App.css';\nimport Main from './main/Main';\nimport Intro from './intro/Intro';\nimport Callback from './intro/Callback';\nimport Error from './intro/Error';\n\nfunction App() {\n    const [ hasError, setHasError ] = useState(false);\n    const [ authorized, setAuthorized ] = useState(false);\n    const authorizedSession = sessionStorage.getItem('authorized');\n\n    return (\n        <Switch>\n            <Route exact path=\"/\">\n                {authorized || authorizedSession === \"true\" ? <Main /> : <Intro />}\n            </Route>\n            <Route path=\"/error/\">\n                {hasError ? <Error /> : <Redirect to=\"/\" />}\n            </Route>\n            <Route path=\"/:access_token(access_token=.*)/\">\n                <Callback\n                    setAuthorized={setAuthorized}\n                    setHasError={setHasError}\n                />\n            </Route>\n        </Switch>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom'; \n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}