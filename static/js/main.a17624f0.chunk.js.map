{"version":3,"sources":["main/HandleTokenExpiry.js","main/userinfo/UserInfo.js","main/common/FoldButton.js","main/common/DeleteButton.js","main/common/Entry.js","main/common/SearchSubsection.js","main/common/PlaylistSubsection.js","main/common/Subsection.js","main/search/SearchResult.js","main/search/Search.js","main/search/useVisibleComponent.js","main/playlist/Playlist.js","options.js","main/submit/Submit.js","Footer.js","outro/Outro.js","main/Main.js","intro/Intro.js","intro/Callback.js","intro/Error.js","App.js","reportWebVitals.js","index.js"],"names":["handleTokenExpiry","accessTokenTimestamp","sessionStorage","getItem","Date","now","window","removeItem","alert","location","reload","UserInfo","props","setUserID","useState","userName","setUserName","useEffect","accessToken","fetch","method","headers","then","response","json","data","catch","error","console","log","className","style","cursor","onClick","FoldButton","isVisible","showSubsection","DeleteButton","artistID","albumID","isSubsection","isDiscography","playlist","setPlaylist","newPlaylist","Object","keys","length","Entry","mainName","subName","artistName","imageUrl","isSearchResult","hasSubsection","subsection","setQuery","setResultVisible","setShowSubsection","newAlbum","name","discography","topTracks","albums","src","alt","width","height","padding","SearchSubsection","artistUrl","Set","PlaylistSubsection","title","Subsection","subsectionItems","map","i","push","forEach","SearchResult","query","artistResults","setArtistResults","albumResults","setAlbumResults","offsetArtist","setOffsetArtist","offsetAlbum","setOffsetAlbum","requestOptions","fetchURL","URL","searchParams","set","href","artists","items","limitArtist","limitAlbum","artistItems","slice","artist","g","split","w","charAt","toUpperCase","join","images","at","url","albumItems","album","id","a","onMouseDownPreventDefault","e","preventDefault","onMouseDown","Search","initial","setIsVisible","ref","useRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","useVisibleComponent","visible","type","placeholder","value","onChange","onFocus","trim","Playlist","playlistItems","textAlign","alignSelf","color","fontStyle","values","options","handleRequest","ok","status","timeout","parseInt","get","Promise","r","setTimeout","getAlbumTrackURIs","trackURIs","offset","track","add","Submit","userID","playlistName","setPlaylistName","setPlaylistLink","setAppInUsage","setPlaylistCreated","checked","setChecked","onClickUpdateValue","onClickSubmit","alertMessage","getRequestOptions","albumIDs","all","size","Array","from","albumURIs","finalPlaylistName","createPlaylistJSON","public","description","createRequestOptions","body","JSON","stringify","createURL","playlistID","trackURIIndex","trackURIArray","addTracksURL","addTracksJSON","uris","addRequestOptions","Footer","text","footerText","selfAdvertising","position","zIndex","bottom","right","fontSize","Outro","playlistCreated","playlistLink","loadingText","setLoadingText","intervalID","setInterval","clearInterval","fontWeight","rel","to","disclaimer","Main","appInUsage","Intro","spotifyState","possible","Math","floor","random","generateRandomString","authorizeURL","setItem","Callback","setHasError","setAuthorized","URLSearchParams","hash","substring","access_token","responseState","valid","Error","App","hasError","authorized","authorizedSession","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6ZAAe,SAASA,IACpB,IAAMC,EAAuBC,eAAeC,QAAQ,0BAChDC,KAAKC,MAAQJ,EAAuB,OACpCK,OAAOJ,eAAeK,WAAW,cACjCD,OAAOJ,eAAeK,WAAW,gBACjCD,OAAOJ,eAAeK,WAAW,0BACjCC,MAAM,qDACNF,OAAOG,SAASC,U,iBC4CTC,MA/Cf,SAAkBC,GACd,IAAMC,EAAYD,EAAMC,UADH,EAWaC,mBAAS,IAXtB,mBAWbC,EAXa,KAWHC,EAXG,KAuCrB,OA3BAC,qBAAU,WACNjB,IACA,IAAMkB,EAAcZ,OAAOJ,eAAeC,QAAQ,gBAmBlD,OAXAgB,MAAM,gCAPiB,CACnBC,OAAQ,MACRC,QAAS,CACL,cAAiB,UAAYH,KAKhCI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFT,EAAYS,EAAI,cAChBZ,EAAUY,EAAI,OAEjBC,OAAM,SAAAC,GACHX,EAAY,WACZY,QAAQC,IAAIF,MAGb,WACHX,EAAY,IACZH,EAAU,OAEf,CAAEA,IAGD,sBAAKiB,UAAU,WAAf,UACI,+CAAiB,0CAAef,EAAf,aACjB,qBAAKgB,MAAO,CAACC,OAAQ,WAAYC,QAvCpB,WACjB3B,OAAOJ,eAAeK,WAAW,cACjCD,OAAOJ,eAAeK,WAAW,gBACjCD,OAAOJ,eAAeK,WAAW,0BACjCC,MAAM,0CACNF,OAAOG,SAASC,UAkCZ,SAAwD,gD,kBC7BrDwB,MAff,SAAoBtB,GAAQ,IAChBuB,EAA8BvB,EAA9BuB,UAAWC,EAAmBxB,EAAnBwB,eAEnB,OAAID,EAEI,qBACIL,UAAU,kCADd,SAEKM,EAAiB,SAAM,MAIxB,qBAAKN,UAAU,iBC4BhBO,MAvCf,SAAsBzB,GAAQ,IAEtB0B,EAKgB1B,EALhB0B,SACHC,EAImB3B,EAJnB2B,QACGC,EAGgB5B,EAHhB4B,aACHC,EAEmB7B,EAFnB6B,cACGC,EACgB9B,EADhB8B,SACAC,EAAgB/B,EAAhB+B,YAuBJ,OACI,qBACIb,UAAU,qDACVG,QAxBkB,WACtB,IAAIW,EAAW,eAAOF,IAEjBD,GAAiBD,GACdD,SACOK,EAAYN,GAAZ,OAAgCC,GAEvCK,EAAYN,GAAZ,WAAqC,EAGnCM,EAAYN,GAAZ,WACyD,IAAxDO,OAAOC,KAAKF,EAAYN,GAAZ,QAAiCS,eACrCH,EAAYN,WAGpBM,EAAYN,GAGvBK,EAAYC,IAIZ,SAGK,O,MCwCEI,MAvEf,SAAepC,GAAQ,IACXqC,EAYqBrC,EAZrBqC,SACAC,EAWqBtC,EAXrBsC,QACAC,EAUqBvC,EAVrBuC,WACAb,EASqB1B,EATrB0B,SACAC,EAQqB3B,EARrB2B,QACAa,EAOqBxC,EAPrBwC,SACAC,EAMqBzC,EANrByC,eACAC,EAKqB1C,EALrB0C,cACAC,EAIqB3C,EAJrB2C,WACAb,EAGqB9B,EAHrB8B,SACAC,EAEqB/B,EAFrB+B,YACAa,EACqB5C,EADrB4C,SACAC,EAAqB7C,EAArB6C,iBAbU,EAc4B3C,oBAAS,GAdrC,mBAcVsB,EAdU,KAcMsB,EAdN,KAyClB,OACI,sBAAK5B,UAAU,aAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,sBACIA,UAAU,0BACVG,QAASoB,IAAmBC,EA7BpB,WACpB,IAAIV,EAAW,eAAOF,GACtB,GAAIJ,KAAYI,EACRE,EAAYN,GAAZ,YACA9B,MAAM,+CAENoC,EAAYN,GAAZ,OAAgCC,GAAWU,MAE5C,CACV,IAAIU,EAAW,GACfA,EAASpB,GAAWU,EACbL,EAAYN,GAAY,CACpBsB,KAAMT,EACNC,SAAUA,EACVS,aAAa,EACbC,WAAW,EACXC,OAAQJ,GAGhBhB,EAAYC,GACZa,GAAiB,GACjBD,EAAS,KAtBiB,kBAAME,GAAmBtB,IA4B3C,UAGI,cAAC,EAAD,CACID,UAAWmB,EACXlB,eAAgBA,IACpB,qBACI4B,IAAKZ,EACLa,IAAI,GACJlC,MAAO,CAACmC,MAAO,OAAQC,OAAQ,OAAQC,QAAS,SAEpD,gCACI,6BAAKnB,IACL,4BAAIC,WAGTG,GACC,cAAC,EAAD,CACIf,SAAUA,EACVI,SAAUA,EACVC,YAAaA,OAExBP,GAAkBmB,MCtBhBc,MAjDf,SAA0BzD,GAAQ,IACtB8B,EAOa9B,EAPb8B,SACAJ,EAMa1B,EANb0B,SACAa,EAKavC,EALbuC,WACAmB,EAIa1D,EAJb0D,UACA7B,EAGa7B,EAHb6B,cACAE,EAEa/B,EAFb+B,YACAc,EACa7C,EADb6C,iBACAD,EAAa5C,EAAb4C,SAgCR,OACI,qBACI1B,UAAU,6BACVG,QAjCe,WACnB,IAAIW,EAAW,eAAOF,GAElBJ,KAAYI,EACRD,GACAG,EAAYN,GAAZ,aAAuC,EACvCM,EAAYN,GAAZ,WAAqC,EACrCM,EAAYN,GAAZ,OAAkC,IAAIiC,IAAI,KAEtC3B,EAAYN,GAAZ,YACA9B,MAAM,+CAENoC,EAAYN,GAAZ,WAAqC,EAI7CM,EAAYN,GAAY,CACpBsB,KAAMT,EACNC,SAAUkB,EACVT,YAAapB,EACbqB,WAAYrB,EACZsB,OAAQ,IAGhBpB,EAAYC,GAEZa,GAAiB,GACjBD,EAAS,KAIT,SAGKf,EAAgB,kBAAoB,oBCnBlC+B,MAvBf,SAA4B5D,GAAQ,IACxB0B,EAKgB1B,EALhB0B,SACAC,EAIgB3B,EAJhB2B,QACAkC,EAGgB7D,EAHhB6D,MACHhC,EAEmB7B,EAFnB6B,cACGC,EACgB9B,EADhB8B,SACAC,EAAgB/B,EAAhB+B,YAER,OACI,sBACIb,UAAU,6BADd,UAEK2C,EACD,cAAC,EAAD,CACInC,SAAUA,EACVC,QAASA,EACTC,cAAc,EACpBC,cAAeA,EACTC,SAAUA,EACVC,YAAaA,Q,MC0Dd+B,MA1Ef,SAAoB9D,GAAQ,IAChB0B,EAOqB1B,EAPrB0B,SACAa,EAMqBvC,EANrBuC,WACAmB,EAKqB1D,EALrB0D,UACAjB,EAIqBzC,EAJrByC,eACAX,EAGqB9B,EAHrB8B,SACAC,EAEqB/B,EAFrB+B,YACAa,EACqB5C,EADrB4C,SACAC,EAAqB7C,EAArB6C,iBAEJkB,EAAkB,GAyDtB,OAxDItB,EACAsB,EAAkB,EAAC,GAAM,GAAOC,KAAI,SAACC,GACjC,OAAO,cAAC,EAAD,CAEHnC,SAAUA,EACVJ,SAAUA,EACVa,WAAYA,EACZmB,UAAWA,EACX7B,cAAeoC,EACflC,YAAaA,EACbc,iBAAkBA,EAClBD,SAAUA,GARX,oBAAsBlB,EAAWuC,MAYpCnC,EAASJ,GAAT,YACAqC,EAAgBG,KACZ,cAAC,EAAD,CAEIxC,SAAUA,EACVmC,MAAO,cACbhC,eAAe,EACTC,SAAUA,EACVC,YAAaA,GALR,sBAAwBL,EAAW,iBAS5CI,EAASJ,GAAT,WACAqC,EAAgBG,KACZ,cAAC,EAAD,CAEIxC,SAAUA,EACVmC,MAAO,aAChBhC,eAAe,EACNC,SAAUA,EACVC,YAAaA,GALR,sBAAwBL,EAAW,cAUpDO,OAAOC,KAAKJ,EAASJ,GAAT,QAA8ByC,SAAQ,SAACxC,GAC/CoC,EAAgBG,KACZ,cAAC,EAAD,CAEIxC,SAAUA,EACVC,QAASA,EACTkC,MAAK,kBAAa/B,EAASJ,GAAT,OAA6BC,IACxDE,eAAe,EACNC,SAAUA,EACVC,YAAaA,GANR,sBAAwBL,EAAWC,QAcxD,qBAAKT,UAAU,wBAAf,SACK6C,KCiEEK,MArIf,SAAsBpE,GAAQ,IAClBqE,EAIqBrE,EAJrBqE,MACAzB,EAGqB5C,EAHrB4C,SACAd,EAEqB9B,EAFrB8B,SACAC,EACqB/B,EADrB+B,YACAc,EAAqB7C,EAArB6C,iBALiB,EAMmB3C,mBAAS,IAN5B,mBAMjBoE,EANiB,KAMFC,EANE,OAOiBrE,mBAAS,IAP1B,mBAOjBsE,EAPiB,KAOHC,EAPG,OAQiBvE,mBAAS,GAR1B,mBAQjBwE,EARiB,KAQHC,EARG,OASezE,mBAAS,GATxB,mBASjB0E,EATiB,KASJC,EATI,KAWzBxE,qBAAU,WACNjB,IAEA,IACM0F,EAAiB,CACnBtE,OAAQ,MACRC,QAAS,CACL,cAAiB,UAJLf,OAAOJ,eAAeC,QAAQ,kBAO5CwF,EAAW,IAAIC,IAAI,qCAkBzB,OAjBAD,EAASE,aAAaC,IAAI,IAAKb,GAC/BU,EAASE,aAAaC,IAAI,SAAU,cACpCH,EAASE,aAAaC,IAAI,OAAQ,gBAElC3E,MAAMwE,EAASI,KAAML,GAChBpE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAS,IAAD,IACV0D,EAAgB,OAAC1D,QAAD,IAACA,GAAD,UAACA,EAAMuE,eAAP,aAAC,EAAeC,OAChCZ,EAAe,OAAC5D,QAAD,IAACA,GAAD,UAACA,EAAMsC,cAAP,aAAC,EAAckC,UAEjCvE,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAGpB4D,EAAgB,GAChBE,EAAe,GAER,WACHN,EAAiB,IACjBE,EAAgB,OAErB,CAAEJ,IAEL,IAAMiB,EAAchB,EAAgBA,EAAcnC,OAAS,EACrDoD,EAAaf,EAAeA,EAAarC,OAAS,EAElDqD,EAAW,OAAGlB,QAAH,IAAGA,OAAH,EAAGA,EAAemB,MAAMf,EAAcA,EAAe,GAAGV,KAAI,SAAC0B,GAAD,mBACzE,cAAC,EAAD,CAEIrD,SAAUqD,EAAM,KAChBpD,QAASoD,EAAM,OAAW1B,KAAI,SAAC2B,GAAD,OAAOA,EAAEC,MAAM,KAAK5B,KAAI,SAAC6B,GAAD,OAAOA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEJ,MAAM,MAAIO,KAAK,QAAMA,KAAK,MACrHtE,SAAUgE,EAAM,GAChBlD,SAAQ,UAAEkD,EAAOO,cAAT,iBAAE,EAAeC,IAAI,UAArB,aAAE,EAAuBC,IACjC1D,gBAAgB,EAChBC,eAAe,EACfC,WAAY,cAAC,EAAD,CACRjB,SAAUgE,EAAM,GAChBnD,WAAYmD,EAAM,KAClBhC,UAAS,UAAEgC,EAAOO,cAAT,iBAAE,EAAeC,IAAI,UAArB,aAAE,EAAuBC,IAClC1D,gBAAgB,EAChBX,SAAUA,EACVC,YAAaA,EACba,SAAUA,EACVC,iBAAkBA,IACtBf,SAAUA,EACVC,YAAaA,EACba,SAAUA,GAlBL,gBAAkB8C,EAAM,OAqB/BU,EAAU,OAAG5B,QAAH,IAAGA,OAAH,EAAGA,EAAciB,MAAMb,EAAaA,EAAc,GAAGZ,KAAI,SAACqC,GAAD,mBACrE,cAAC,EAAD,CAEI9D,WAAU,UAAE8D,EAAMjB,eAAR,aAAE,EAAec,GAAG,GAAGlD,KACjCtB,SAAQ,UAAE2E,EAAMjB,eAAR,aAAE,EAAec,GAAG,GAAGI,GAC/B3E,QAAS0E,EAAK,GACdhE,SAAUgE,EAAK,KACf/D,QAAS+D,EAAK,QAAYrC,KAAI,SAACuC,GAAD,OAAOA,EAAC,QAAUP,KAAK,MACrDxD,SAAQ,UAAE6D,EAAMJ,cAAR,iBAAE,EAAcC,GAAG,UAAnB,aAAE,EAAqBC,IAC/B1D,gBAAgB,EAChBC,eAAe,EACfZ,SAAUA,EACVC,YAAaA,EACbc,iBAAkBA,EAClBD,SAAUA,GAZL,gBAAkByD,EAAK,OAoB9BG,EAA4B,SAACC,GAAD,OAAOA,EAAEC,kBAE3C,OACI,sBAAKxF,UAAU,qCAAf,UACI,mBAAGA,UAAU,aAAb,qBACCsE,GAAed,EAAe,GAC3B,qBACIxD,UAAU,2CACVG,QAZoB,kBAAMsD,EAAgBD,EAAe,IAazDiC,YAAaH,EAHjB,yBAMHhB,EACAA,GAAed,EAAe,EAAIY,GAC/B,qBACIpE,UAAU,2CACVG,QAnBoB,kBAAMsD,EAAgBD,EAAe,IAoBzDiC,YAAaH,EAHjB,qBAMJ,mBAAGtF,UAAU,aAAb,oBACC0D,EAAc,GACX,qBACI1D,UAAU,2CACVG,QA1BmB,kBAAMwD,EAAeD,EAAc,IA2BtD+B,YAAaH,EAHjB,yBAMHJ,EACAA,GAAcxB,EAAc,EAAIW,GAC7B,qBACIrE,UAAU,2CACVG,QAjCmB,kBAAMwD,EAAeD,EAAc,IAkCtD+B,YAAaH,EAHjB,yB,MCjFDI,MA1Cf,SAAgB5G,GAAQ,IACZ8B,EAA0B9B,EAA1B8B,SAAUC,EAAgB/B,EAAhB+B,YADC,ECHR,SAA6B8E,GAAU,IAAD,EACb3G,mBAAS2G,GADI,mBACzCtF,EADyC,KAC9BuF,EAD8B,KAE3CC,EAAMC,iBAAO,MAEbC,EAAqB,SAACC,GACpBH,EAAII,UAAYJ,EAAII,QAAQC,SAASF,EAAMG,SAAW9F,GACtDuF,GAAa,IAWrB,OAPAzG,qBAAU,WAEN,OADAiH,SAASC,iBAAiB,QAASN,GAAoB,GAChD,WACHK,SAASE,oBAAoB,QAASP,GAAoB,OAI3D,CAAEF,EAAKxF,EAAWuF,GDXkBW,EAAoB,GAH5C,mBAGXV,EAHW,KAGNW,EAHM,KAGG7E,EAHH,OAIS3C,mBAAS,IAJlB,mBAIXmE,EAJW,KAIJzB,EAJI,KAiBnB,OAXAvC,qBAAU,WAEFwC,IADAwB,KAKL,CAAEA,EAAOxB,IAMR,qBAAKkE,IAAKA,EAAV,SACI,sBAAK7F,UAAU,SAAf,UACI,uBACIA,UAAU,kCACVyG,KAAK,OACLC,YAAY,YACZC,MAAOxD,EACPyD,SAXS,SAAArB,GAAC,OAAI7D,EAAS6D,EAAEY,OAAOQ,QAYhCE,QAXU,kBAAMlF,GAAiB,MAapCwB,GAASqD,GACN,cAAC,EAAD,CACIrD,MAAOA,EAAM2D,OACbpF,SAAUA,EACVd,SAAUA,EACVC,YAAaA,EACbc,iBAAkBA,U,MEmB3BoF,MAtDf,SAAkBjI,GAAQ,IAGlBkI,EAFIpG,EAA0B9B,EAA1B8B,SAAUC,EAAgB/B,EAAhB+B,YA6ClB,OAzCImG,EADiC,IAAjCjG,OAAOC,KAAKJ,GAAUK,OAElB,mBAAGhB,MAAO,CAACgH,UAAW,SAAUC,UAAW,SAAUC,MAAO,wBAAyBC,UAAW,UAAhG,mGAIYrG,OAAOC,KAAKJ,GAAUkC,KAAI,SAACC,GACvC,IAAMtB,EACF,cAAC,EAAD,CACIjB,SAAUuC,EACVnC,SAAUA,EACVC,YAAaA,IAEjBO,EAAU,GAed,OAdCR,EAASmC,GAAT,YACH3B,EAAU,eAENR,EAASmC,GAAT,YACA3B,GAAoB,gBAGxBL,OAAOsG,OAAOzG,EAASmC,GAAT,QAAuBE,SAAQ,SAACkC,GAC1C/D,EAAUA,EAAU,WAAa+D,EAAQ,QAG7C/D,EAAUA,EAAQmD,MAAM,GAAI,IAGnB,cAAC,EAAD,CAEH/D,SAAUuC,EACV5B,SAAUP,EAASmC,GAAT,KACV3B,QAASA,EACTE,SAAUV,EAASmC,GAAT,SACVvB,eAAe,EACfC,WAAYA,EACZb,SAAUA,EACVC,YAAaA,GARR,WAAakC,MAc1B,sBAAK/C,UAAU,0BAAf,UACI,mBAAGA,UAAU,aAAb,8BACCgH,M,gCCrDAM,EACI,mCADJA,EAEO,wBAFPA,EAGe,4DAHfA,GAIY,EAJZA,EAKY,GALZA,EAMY,I,eCkLVC,E,gFAAf,WAA6B1D,EAAUD,GAAvC,eAAAyB,EAAA,sEAGyBhG,MAAMwE,EAASI,KAAML,GAAgBhE,OAAM,SAAAC,GAAUC,QAAQC,IAAIF,MAH1F,YAGQJ,EAHR,QAIqB+H,GAJrB,sDAQoC,MAApB/H,EAASgI,OARzB,0CAAApC,EAAA,kCAAAA,EAAA,6DASsBqC,EAAUC,SAASlI,EAASF,QAAQqI,IAAI,eAAgB,IAT9E,SAUsB,IAAIC,SAAQ,SAAAC,GAAC,OAAIC,WAAWD,EAAGJ,MAVrD,qFAW2C,MAApBjI,EAASgI,SAChBjJ,OAAOJ,eAAeK,WAAW,cACjCD,OAAOJ,eAAeK,WAAW,gBACjCD,OAAOJ,eAAeK,WAAW,0BACjCC,MAAM,+DACNF,OAAOG,SAASC,UAhBhC,wDAqBWa,GArBX,6C,+BAwBeuI,E,gFAAf,WAAiCpE,EAAgBnD,GAAjD,yBAAA4E,EAAA,sDACQ4C,EAAY,IAAIxF,IAAI,KAElBoB,EAAW,IAAIC,IAAJ,4CAA6CrD,EAA7C,aACRsD,aAAaC,IAAI,SAAU,cACpCH,EAASE,aAAaC,IAAI,QAAS,MAE/BkE,EAAS,EAPjB,cASQrE,EAASE,aAAaC,IAAI,SAAUkE,GAT5C,SAW+BX,EAAc1D,EAAUD,GAXvD,cAWcnE,EAXd,iBAY2BA,EAASC,OAAOE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAZtE,WAYcF,EAZd,QAacwE,EAAQxE,EAAI,OAEZsD,SAAQ,SAACkF,GACXF,EAAUG,IAAID,EAAK,UAGnBhE,EAAMlD,OAAS,IAnB3B,qDAsBYiH,GAAU,GAtBtB,wDA0BWD,GA1BX,6C,sBA6BeI,MAxOf,SAAgBvJ,GAAQ,IACZwJ,EAMuBxJ,EANvBwJ,OACA1H,EAKuB9B,EALvB8B,SACA2H,EAIuBzJ,EAJvByJ,aACAC,EAGuB1J,EAHvB0J,gBACAC,EAEuB3J,EAFvB2J,gBACAC,EACuB5J,EADvB4J,cACAC,EAAuB7J,EAAvB6J,mBAPW,EAQa3J,oBAAS,GARtB,mBAQX4J,EARW,KAQFC,EARE,KASbC,EAAqB,kBAAMD,GAAYD,IAEvCG,EAAa,uCAAG,gEAAA1D,EAAA,yDAClBnH,IAEqC,IAAjC6C,OAAOC,KAAKJ,GAAUK,OAHR,gBAIdvC,MAAM,iEAJQ,4BAKPqC,OAAOC,KAAKJ,GAAUK,OAASqG,GAAgCA,GALxD,iBAMV0B,EAAe,GACnBA,GAAY,8BAA2B1B,EAA3B,6BACZ0B,GAAgB,mDAChBA,GAAgB,mEAChBA,GAAgB,kDAChBtK,MAAMsK,GAXQ,+BAaR5J,EAAcZ,OAAOJ,eAAeC,QAAQ,gBAC5C4K,EAAoB,CACtB3J,OAAQ,MACRC,QAAS,CACL,cAAiB,UAAYH,IAKjC6I,EAAY,IAAIxF,IAAI,IACpByG,EAAW,IAAIzG,IAAI,IAvBT,UAyBRoF,QAAQsB,IAAIpI,OAAOC,KAAKJ,GAAUkC,IAAtB,iBAAA/B,OAAA,IAAAA,CAAA,UAA0B,WAAOP,GAAP,2BAAA6E,EAAA,0DACpCzE,EAASJ,GAAT,YADoC,kBAE9BqD,EAAW,IAAIC,IAAJ,6CAA8CtD,EAA9C,aACRuD,aAAaC,IAAI,SAAU,cACpCH,EAASE,aAAaC,IAAI,iBAAkB,gBAC5CH,EAASE,aAAaC,IAAI,QAAS,MAE/BkE,EAAS,EAPuB,cAShCrE,EAASE,aAAaC,IAAI,SAAUkE,GATJ,UAWTX,EAAc1D,EAAUoF,GAXf,eAW1BxJ,EAX0B,iBAYbA,EAASC,OAAOE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAZ9B,WAY1BF,EAZ0B,OAa1BwE,EAAQxE,EAAI,MACDwE,EAAMrB,KAAI,SAAAqC,GAAK,OAAIA,EAAK,MAChClC,SAAQ,SAAAmC,GAAE,OAAI8D,EAASd,IAAIhD,QAEhCjB,EAAMlD,OAAS,IAjBa,qDAoB5BiH,GAAU,GApBkB,0DAwBpCnH,OAAOC,KAAKJ,EAASJ,GAAT,QAA8ByC,SAAQ,SAAAmC,GAAE,OAAI8D,EAASd,IAAIhD,OAEjExE,EAASJ,GAAT,UA1BgC,wBA2B1BqD,EAAW,IAAIC,IAAJ,6CAA8CtD,EAA9C,iBACRuD,aAAaC,IAAI,SAAU,cA5BJ,UA8BTuD,EAAc1D,EAAUoF,GA9Bf,eA8B1BxJ,EA9B0B,iBA+BbA,EAASC,OAAOE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MA/B9B,eAgC5B,OAAWoD,SAAQ,SAACkF,GACpBF,EAAUG,IAAID,EAAK,QAjCS,oDAA1B,wDAzBJ,aAiEVb,GAAgC4B,EAASE,KAAO9B,GAjEtC,iBAkEN0B,EAAe,GACnBA,GAAY,8BAA2B1B,EAA3B,0CACZ0B,GAAgB,0EAChBA,GAAgB,mEAChBA,GAAgB,kDAChBtK,MAAMsK,GAvEI,+BA0EVN,GAAc,GA1EJ,UA6EJb,QAAQsB,IAAIE,MAAMC,KAAKJ,GAAUpG,IAArB,uCAAyB,WAAOrC,GAAP,eAAA4E,EAAA,sEACf2C,EAAkBiB,EAAmBxI,GADtB,OACjC8I,EADiC,OAEvCtB,EAAY,IAAIxF,IAAJ,sBAAYwF,GAAZ,YAA0BsB,KAFC,2CAAzB,wDA7ER,eAoFVf,EADMgB,EAAoBjB,GAA8B,wBAElDkB,EAAqB,CACvB3H,KAAM0H,EACNE,OAAQd,EACRe,YAAarC,GAEXsC,EAAuB,CACzBtK,OAAQ,OACRC,QAAS,CACL,cAAiB,UAAYH,EAC7B,eAAgB,oBAEpByK,KAAMC,KAAKC,UAAUN,IAEnBO,EAAY,IAAIlG,IAAJ,2CAA4CwE,EAA5C,eAlGR,UAmGaf,EAAcyC,EAAWJ,GAnGtC,eAmGJnK,EAnGI,iBAoGSA,EAASC,OAAOE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MApGpD,QAoGJF,EApGI,OAqGJsK,EAAatK,EAAI,GACvB8I,EAAgB9I,EAAI,cAAJ,SAEZuK,EAAgB,EACdC,EAAgBd,MAAMC,KAAKrB,GAC3BmC,EAAe,IAAItG,IAAJ,+CAAgDmG,EAAhD,YA1GX,aA2GHC,EAAgBC,EAAclJ,QA3G3B,wBA4GAoJ,EAAgB,CAClBC,KAAMH,EAAc5F,MAAM2F,EAAeA,EAAgB,MAGvDK,EAAoB,CACtBjL,OAAQ,OACRC,QAAS,CACL,cAAiB,UAAYH,EAC7B,eAAgB,oBAEpByK,KAAMC,KAAKC,UAAUM,IAtHnB,UAwHiB9C,EAAc6C,EAAcG,GAxH7C,eAwHA9K,EAxHA,iBAyHaA,EAASC,OAAOE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAzHxD,eA2HNqK,GAAiB,IA3HX,wBAgIdvB,GAAmB,GAhIL,4CAAH,qDAsInB,OACI,sBAAK3I,UAAU,SAAf,UACI,uBACIyG,KAAK,OACLE,MAAO4B,EACP7B,YAAY,mBACZE,SARuB,SAAArB,GAAC,OAAIiD,EAAgBjD,EAAEY,OAAOQ,QASrD1G,MAAO,CACHoC,OAAQ,UAGhB,sBAAKrC,UAAU,gBAAf,UACI,uBACIyG,KAAK,WACLmC,QAASA,EACTzI,QAAS2I,IAEb,qBACI3I,QAAS2I,EACT7I,MAAO,CACHC,OAAQ,WAHhB,sCAQJ,qBACIF,UAAU,+BACVG,QAAS4I,EAFb,wBCjJGyB,MA9Bf,SAAgB1L,GAAQ,IAGhB2L,EAFIC,EAAgC5L,EAAhC4L,WAGR,GAHwC5L,EAApB6L,gBAGC,CAEjBF,EACA,2HAC4F,mBAAGxG,KAH7E,4DAG0E,2BAG5FwG,EAAO,8BAAMC,IAGjB,OACI,qBACIzK,MAAO,CACHkH,MAAO,wBACPyD,SAAU,QACVC,OAAQ,KACRC,OAAQ,MACRC,MAAO,MACPC,SAAU,QACV/D,UAAW,SARnB,SAUKwD,K,OC8CEQ,MAlEf,SAAenM,GAAQ,IACXoM,EAIuBpM,EAJvBoM,gBACA3C,EAGuBzJ,EAHvByJ,aACA4C,EAEuBrM,EAFvBqM,aACAzC,EACuB5J,EADvB4J,cACAC,EAAuB7J,EAAvB6J,mBALU,EAMsB3J,mBAAS,KAN/B,mBAMVoM,EANU,KAMGC,EANH,KA8BlB,OAtBAlM,qBAAU,WASN,IAAMmM,EAAaC,aARnB,WAC+B,IAAvBH,EAAYnK,OACZoK,EAAe,KAEfA,EAAeD,EAAc,OAIa,KAElD,OAAO,WACHI,cAAcF,MAEnB,CAAEF,IAQAF,EAoBG,sBAAKlL,UAAU,cAAf,UACI,oBACIC,MAAO,CACHkH,MAAO,oBACPsE,WAAY,OACZxE,UAAW,UAJnB,sBAMa,mBAAGhD,KAAMkH,EAAchF,OAAO,SAASuF,IAAI,aAA3C,SAA0DnD,IANvE,YAOI,cAAC,IAAD,CAAMoD,GAAG,IAAIxL,QAlCH,WACtBuI,GAAc,GACdC,GAAmB,GACnBnK,OAAOG,SAASC,UA+BJ,6CAEJ,cAAC,EAAD,CAAQ+L,iBAAiB,QA5BnB,iEACA,iBAGV,sBAAK3K,UAAU,cAAf,UACI,oBACIC,MAAO,CACHkH,MAAO,oBACPsE,WAAY,OACZxE,UAAW,UAJnB,0BAMiB,sBAAMhH,MAAO,CAACkH,MAAO,0BAArB,sBAA+D,uBAAMiE,KAEtF,cAAC,EAAD,CAAQV,WAZhBkB,uJ,MC2BOC,MAxDf,WAAiB,IAAD,EACsB7M,mBAAS,IAD/B,mBACJ4B,EADI,KACMC,EADN,OAEkB7B,mBAAS,IAF3B,mBAEJsJ,EAFI,KAEIvJ,EAFJ,OAG8BC,mBAAS,IAHvC,mBAGJuJ,EAHI,KAGUC,EAHV,OAI8BxJ,mBAAS,IAJvC,mBAIJmM,EAJI,KAIU1C,EAJV,OAK0BzJ,oBAAS,GALnC,mBAKJ8M,EALI,KAKQpD,EALR,OAMoC1J,oBAAS,GAN7C,mBAMJkM,EANI,KAMavC,EANb,KAkBZ,GAVAxJ,qBAAU,WACN4I,YAAW,WACPvJ,OAAOJ,eAAeK,WAAW,cACjCD,OAAOJ,eAAeK,WAAW,gBACjCD,OAAOJ,eAAeK,WAAW,0BACjCC,MAAM,qDACNF,OAAOG,SAASC,WACpB,QACD,IAECkN,EAAY,CAMZ,MAJc,8DACA,iEACA,4BAEN,sBAAK9L,UAAU,OAAf,UACJ,cAAC,EAAD,CACIjB,UAAWA,IACf,cAAC,EAAD,CACI6B,SAAUA,EACVC,YAAaA,IACjB,cAAC,EAAD,CACID,SAAUA,EACVC,YAAaA,IACjB,cAAC,EAAD,CACIyH,OAAQA,EACR1H,SAAUA,EACV2H,aAAcA,EACdC,gBAAiBA,EACjBC,gBAAiBA,EACjBC,cAAeA,EACfC,mBAAoBA,IACxB,cAAC,EAAD,CAAQ+B,WAnBZkB,0JAuBA,OACI,cAAC,EAAD,CACIrD,aAAcA,EACd4C,aAAcA,EACdD,gBAAiBA,EACjBxC,cAAeA,EACfC,mBAAoBA,KCnBrBoD,MAzBf,WACI,IAAMC,EAZV,SAA8B/K,GAI1B,IAHA,IAAIwJ,EAAO,GACPwB,EAAW,iEAENlJ,EAAI,EAAGA,EAAI9B,EAAQ8B,IACxB0H,GAAQwB,EAASrH,OAAOsH,KAAKC,MAAMD,KAAKE,SAAWH,EAAShL,SAGhE,OAAOwJ,EAIc4B,CAAqB,IAGpCC,EAAe,IAAIxI,IAAJ,0CASrB,OARAwI,EAAavI,aAAaC,IAAI,YAAasD,GAC3CgF,EAAavI,aAAaC,IAAI,eAAgBsD,GAC9CgF,EAAavI,aAAaC,IAAI,gBAAiB,SAC/CsI,EAAavI,aAAaC,IAAI,QAASgI,GACvCM,EAAavI,aAAaC,IAAI,QAPhB,oEASd5F,eAAemO,QAAQ,iBAAkBP,GAGrC,sBAAKhM,UAAU,cAAf,UACI,sBAAKA,UAAU,cAAf,UACI,mBAAGiE,KAAMqI,EAAarI,KAAtB,8BADJ,kBAKA,cAAC,EAAD,CAAQ0G,iBAAiB,QCAtB6B,MAjCf,SAAkB1N,GAAQ,IACd2N,EAA+B3N,EAA/B2N,YAAaC,EAAkB5N,EAAlB4N,cAEfjN,EAAW,IAAIkN,gBAAgBnO,OAAOG,SAASiO,KAAKC,UAAU,IAE9Db,EAAe5N,eAAeC,QAAQ,kBACtCyO,EAAerN,EAASmI,IAAI,gBAC5B/H,EAAQJ,EAASmI,IAAI,SACrBmF,EAAgBtN,EAASmI,IAAI,SAE7BoF,EAAQF,GAAiBd,IAAiBe,EAgBhD,OAbA5N,qBAAW,WACH6N,GACA5O,eAAemO,QAAQ,aAAc,QACrCnO,eAAemO,QAAQ,eAAgBO,GACvC1O,eAAemO,QAAQ,yBAA0BjO,KAAKC,OACtDH,eAAeK,WAAW,kBAC1BiO,GAAc,KAEd5M,QAAQC,IAAIF,GACZ4M,GAAY,OAIhBO,EACO,cAAC,IAAD,CAAUrB,GAAG,MAEb,cAAC,IAAD,CAAUA,GAAG,YCtBbsB,MARf,WACI,OACI,sBAAKjN,UAAU,mBAAf,8CACqC,cAAC,IAAD,CAAM2L,GAAG,IAAT,8BC0B9BuB,MAvBf,WAAgB,IAAD,EACuBlO,oBAAS,GADhC,mBACHmO,EADG,KACOV,EADP,OAE2BzN,oBAAS,GAFpC,mBAEHoO,EAFG,KAESV,EAFT,KAGLW,EAAoBjP,eAAeC,QAAQ,cAEjD,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOiP,OAAK,EAACC,KAAK,IAAlB,SACKH,GAAoC,SAAtBC,EAA+B,cAAC,EAAD,IAAW,cAAC,EAAD,MAE7D,cAAC,IAAD,CAAOE,KAAK,SAAZ,SACKJ,EAAW,cAAC,EAAD,IAAY,cAAC,IAAD,CAAUxB,GAAG,QAEzC,cAAC,IAAD,CAAO4B,KAAK,YAAZ,SACI,cAAC,EAAD,CACIb,cAAeA,EACfD,YAAaA,UCZlBe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlO,MAAK,YAAkD,IAA/CmO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAAC,EAAD,QAGR9H,SAAS+H,eAAe,SAM5BX,M","file":"static/js/main.a17624f0.chunk.js","sourcesContent":["export default function handleTokenExpiry() {\n    const accessTokenTimestamp = sessionStorage.getItem(\"access_token_timestamp\");\n    if (Date.now() - accessTokenTimestamp > 3300000) {\n        window.sessionStorage.removeItem(\"authorized\");\n        window.sessionStorage.removeItem(\"access_token\");\n        window.sessionStorage.removeItem(\"access_token_timestamp\");\n        alert(\"Your login token has expired. Please login again.\");\n        window.location.reload()\n    }\n};","import { useState, useEffect } from 'react';\nimport handleTokenExpiry from '../HandleTokenExpiry';\nimport './UserInfo.css';\n\nfunction UserInfo(props) {\n    const setUserID = props.setUserID;\n\n    const handleLogout = () => {\n        window.sessionStorage.removeItem(\"authorized\");\n        window.sessionStorage.removeItem(\"access_token\");\n        window.sessionStorage.removeItem(\"access_token_timestamp\");\n        alert(\"You have been logged out successfully.\");\n        window.location.reload();\n    }\n\n    const [ userName, setUserName ] = useState(\"\");\n    useEffect(() => {\n        handleTokenExpiry();\n        const accessToken = window.sessionStorage.getItem(\"access_token\");\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer ' + accessToken,\n            }\n        };\n\n        fetch('https://api.spotify.com/v1/me', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setUserName(data[\"display_name\"]);\n                setUserID(data[\"id\"]);\n            })\n            .catch(error => {\n                setUserName(\"<error>\");\n                console.log(error);\n            });\n\n        return () => {\n            setUserName(\"\");\n            setUserID(\"\");\n        };\n    }, [ setUserID ]);\n\n    return (\n        <div className=\"userinfo\">\n            <div>Logged in as<strong>&nbsp;{userName}&nbsp;</strong></div>\n            <div style={{cursor: \"pointer\"}} onClick={handleLogout}><u>(Log Out)</u></div>\n        </div>\n    );\n};\n\nexport default UserInfo;\n","import './Button.css';\n\nfunction FoldButton(props) {\n    const { isVisible, showSubsection } = props;\n\n    if (isVisible) {\n        return (\n            <div \n                className=\"main-button main-visible-button\">\n                {showSubsection ? \"—\" : \"+\"}\n            </div>\n        );\n    } else {\n        return (<div className=\"main-button\"></div>);\n    };\n}\n\nexport default FoldButton;","import './Button.css';\n\nfunction DeleteButton(props) {\n    const {\n        artistID,\n\t    albumID,\n        isSubsection,\n\t    isDiscography,\n        playlist,\n        setPlaylist,} = props;\n\n    const onClickDeleteItem = () => {\n        let newPlaylist = {...playlist};\n\n        if (!isDiscography && isSubsection) {\n            if (albumID) {\n                delete newPlaylist[artistID][\"albums\"][albumID];\n            } else {\n                newPlaylist[artistID][\"topTracks\"] = false;\n            };\n\n            if (!(newPlaylist[artistID][\"topTracks\"]) \n                && Object.keys(newPlaylist[artistID][\"albums\"]).length === 0) {\n                    delete newPlaylist[artistID];\n            };\n        } else {\n            delete newPlaylist[artistID];\n        };\n\n        setPlaylist(newPlaylist);\n    };\n\n    return (\n        <div\n            className=\"main-button main-visible-button main-delete-button\"\n            onClick={onClickDeleteItem} >\n            {\"X\"}\n        </div>\n    );\n};\n\nexport default DeleteButton;\n","import { useState } from 'react';\nimport FoldButton from './FoldButton';\nimport DeleteButton from './DeleteButton';\nimport './Entry.css';\n\nfunction Entry(props) {\n    const { mainName,\n            subName, \n            artistName,\n            artistID,\n            albumID,\n            imageUrl, \n            isSearchResult, \n            hasSubsection, \n            subsection, \n            playlist, \n            setPlaylist,\n            setQuery, \n            setResultVisible } = props;\n    const [ showSubsection, setShowSubsection ] = useState(false);\n\n    const onClickShowSubsection = () => setShowSubsection(!showSubsection);\n    const onClickAddAlbum = () => {\n        let newPlaylist = {...playlist};\n        if (artistID in playlist) {\n            if (newPlaylist[artistID]['discography']) {\n                alert(\"You already added this artist's discography\");\n            } else {\n                newPlaylist[artistID]['albums'][albumID] = mainName;\n            }\n        } else {\n\t    let newAlbum = {};\n\t    newAlbum[albumID] = mainName;\n            newPlaylist[artistID] = {\n                name: artistName,\n                imageUrl: imageUrl,\n                discography: false,\n                topTracks: false,\n                albums: newAlbum,\n            }\n        };\n        setPlaylist(newPlaylist);\n        setResultVisible(false);\n        setQuery(\"\");\n    };\n\n    return (\n        <div className=\"main-entry\">\n            <div className=\"main-entry-details\">\n                <div\n                    className=\"main-entry-details-left\"\n                    onClick={isSearchResult && !hasSubsection ? onClickAddAlbum : onClickShowSubsection}>\n                    <FoldButton \n                        isVisible={hasSubsection}\n                        showSubsection={showSubsection} />\n                    <img \n                        src={imageUrl}\n                        alt=\"\"\n                        style={{width: '90px', height: '90px', padding: '5px'}}\n                    ></img>\n                    <div>\n                        <h3>{mainName}</h3>\n                        <p>{subName}</p>\n                    </div>\n                </div>\n                {(!isSearchResult) && \n                    <DeleteButton \n                        artistID={artistID}\n                        playlist={playlist}\n                        setPlaylist={setPlaylist} />}\n            </div>\n            {showSubsection && subsection}\n        </div>\n    );\n}\n\nexport default Entry;\n","function SearchSubsection(props) {\n    const { playlist,\n            artistID,\n            artistName,\n            artistUrl,\n            isDiscography,\n            setPlaylist,\n            setResultVisible,\n            setQuery } = props;\n\n    const onClickAddItem = () => {\n        let newPlaylist = {...playlist};\n\n        if (artistID in playlist) {\n            if (isDiscography) {\n                newPlaylist[artistID]['discography'] = true;\n                newPlaylist[artistID]['topTracks'] = false;\n                newPlaylist[artistID]['albums'] = new Set([]);\n            } else {\n                if (newPlaylist[artistID]['discography']) {\n                    alert(\"You already added this artist's discography\");\n                } else {\n                    newPlaylist[artistID]['topTracks'] = true;\n                }\n            }\n        } else {\n            newPlaylist[artistID] = {\n                name: artistName,\n                imageUrl: artistUrl,\n                discography: isDiscography,\n                topTracks: !isDiscography,\n                albums: {},\n            }\n        };\n        setPlaylist(newPlaylist);\n\n        setResultVisible(false);\n        setQuery(\"\");\n    }\n\n    return (\n        <div \n            className=\"main-entry-subsection-item\"\n            onClick={onClickAddItem}>\n            {isDiscography ? \"Add Discography\" : \"Add Top Tracks\"}\n        </div>\n    );   \n}\n\nexport default SearchSubsection;\n","import DeleteButton from \"./DeleteButton\";\n\nfunction PlaylistSubsection(props) {\n    const { artistID,\n            albumID,\n            title,\n\t        isDiscography,\n            playlist,\n            setPlaylist } = props\n\n    return (\n        <div \n            className=\"main-entry-subsection-item\">\n            {title}\n            <DeleteButton \n                artistID={artistID}\n                albumID={albumID}\n                isSubsection={true}\n\t    \t    isDiscography={isDiscography}\n                playlist={playlist}\n                setPlaylist={setPlaylist} />\n        </div>\n    );\n}\n\nexport default PlaylistSubsection;\n","import SearchSubsection from \"./SearchSubsection\";\nimport PlaylistSubsection from \"./PlaylistSubsection\";\nimport './Subsection.css';\n\nfunction Subsection(props) {\n    const { artistID,\n            artistName,\n            artistUrl,\n            isSearchResult,\n            playlist,\n            setPlaylist,\n            setQuery,\n            setResultVisible } = props\n\n    let subsectionItems = [];\n    if (isSearchResult) {\n        subsectionItems = [true, false].map((i) => {\n            return <SearchSubsection \n\t\t        key={\"search subsection\" + artistID + i}\n                playlist={playlist}\n                artistID={artistID}\n                artistName={artistName}\n                artistUrl={artistUrl}\n                isDiscography={i}\n                setPlaylist={setPlaylist}\n                setResultVisible={setResultVisible}\n                setQuery={setQuery}\n            />;\n        });\n    } else {\n        if (playlist[artistID][\"discography\"]) {\n            subsectionItems.push(\n                <PlaylistSubsection \n                    key={\"playlist subsection\" + artistID + \"discography\"}\n                    artistID={artistID}\n                    title={\"Discography\"}\n\t\t            isDiscography={true}\n                    playlist={playlist}\n                    setPlaylist={setPlaylist}\n                />\n            );\n        } else {\n            if (playlist[artistID][\"topTracks\"]) {\n                subsectionItems.push(\n                    <PlaylistSubsection \n                        key={\"playlist subsection\" + artistID + \"toptracks\"}\n                        artistID={artistID}\n                        title={\"Top Tracks\"}\n\t\t\t            isDiscography={false}\n                        playlist={playlist}\n                        setPlaylist={setPlaylist}\n                    />\n                );\n            };\n\n            Object.keys(playlist[artistID][\"albums\"]).forEach((albumID) => {\n                subsectionItems.push(\n                    <PlaylistSubsection \n                        key={\"playlist subsection\" + artistID + albumID}\n                        artistID={artistID}\n                        albumID={albumID}\n                        title={`(album) ${playlist[artistID][\"albums\"][albumID]}`}\n\t\t\t            isDiscography={false}\n                        playlist={playlist}\n                        setPlaylist={setPlaylist}\n                    />\n                );\n            });\n        }\n    }\n\n    return (\n        <div className=\"main-entry-subsection\">\n            {subsectionItems}\n        </div>\n    );\n}\n\nexport default Subsection;\n","import { useState, useEffect } from 'react';\nimport handleTokenExpiry from '../HandleTokenExpiry';\nimport Entry from '../common/Entry';\nimport Subsection from '../common/Subsection';\n\nfunction SearchResult(props) {\n    const { query,\n            setQuery, \n            playlist, \n            setPlaylist,\n            setResultVisible } = props;\n    const [ artistResults, setArtistResults ] = useState([]);\n    const [ albumResults, setAlbumResults ] = useState([]);\n    const [ offsetArtist, setOffsetArtist ] = useState(0);\n    const [ offsetAlbum, setOffsetAlbum ] = useState(0);\n\n    useEffect(() => {\n        handleTokenExpiry();\n\n        const accessToken = window.sessionStorage.getItem(\"access_token\");\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer ' + accessToken,\n            }\n        };\n        const fetchURL = new URL('https://api.spotify.com/v1/search');\n        fetchURL.searchParams.set('q', query);\n        fetchURL.searchParams.set('market', 'from_token');\n        fetchURL.searchParams.set('type', 'artist,album');\n\n        fetch(fetchURL.href, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setArtistResults(data?.artists?.items);\n                setAlbumResults(data?.albums?.items);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n\n        setOffsetArtist(0);\n        setOffsetAlbum(0);\n\n        return () => {\n            setArtistResults([]);\n            setAlbumResults([]);\n        }\n    }, [ query ]);\n\n    const limitArtist = artistResults ? artistResults.length : 0;\n    const limitAlbum = albumResults ? albumResults.length : 0;\n\n    const artistItems = artistResults?.slice(offsetArtist, offsetArtist + 5).map((artist) => \n        <Entry\n            key={\"search result\" + artist[\"id\"]}\n            mainName={artist[\"name\"]}\n            subName={artist[\"genres\"].map((g) => g.split(' ').map((w) => w.charAt(0).toUpperCase() + w.slice(1)).join(' ')).join(', ')}\n            artistID={artist[\"id\"]}\n            imageUrl={artist.images?.at(-1)?.url}\n            isSearchResult={true}\n            hasSubsection={true}\n            subsection={<Subsection\n                artistID={artist[\"id\"]}\n                artistName={artist[\"name\"]}\n                artistUrl={artist.images?.at(-1)?.url}\n                isSearchResult={true}\n                playlist={playlist}\n                setPlaylist={setPlaylist}\n                setQuery={setQuery}\n                setResultVisible={setResultVisible} />}\n            playlist={playlist}\n            setPlaylist={setPlaylist}\n            setQuery={setQuery}\n        />\n    );\n    const albumItems = albumResults?.slice(offsetAlbum, offsetAlbum + 5).map((album) => \n        <Entry\n            key={\"search result\" + album[\"id\"]}\n            artistName={album.artists?.at(0).name}\n            artistID={album.artists?.at(0).id}\n            albumID={album[\"id\"]}\n            mainName={album[\"name\"]}\n            subName={album[\"artists\"].map((a) => a[\"name\"]).join(', ')}\n            imageUrl={album.images?.at(0)?.url}\n            isSearchResult={true}\n            hasSubsection={false}\n            playlist={playlist}\n            setPlaylist={setPlaylist}\n            setResultVisible={setResultVisible}\n            setQuery={setQuery}\n        />\n    );\n\n    const onClickDecreaseOffsetArtist = () => setOffsetArtist(offsetArtist - 5);\n    const onClickIncreaseOffsetArtist = () => setOffsetArtist(offsetArtist + 5);\n    const onClickDecreaseOffsetAlbum = () => setOffsetAlbum(offsetAlbum - 5);\n    const onClickIncreaseOffsetAlbum = () => setOffsetAlbum(offsetAlbum + 5);\n    const onMouseDownPreventDefault = (e) => e.preventDefault();\n\n    return (\n        <div className=\"search-searchresult main-component\">\n            <p className=\"main-title\">Artists</p>\n            {artistItems && offsetArtist > 0 &&\n                <div \n                    className=\"main-entry-details search-scroll-buttons\"\n                    onClick={onClickDecreaseOffsetArtist}\n                    onMouseDown={onMouseDownPreventDefault}>\n                    Previous...\n                </div>}\n            {artistItems}\n            {artistItems && offsetArtist + 5 < limitArtist &&\n                <div \n                    className=\"main-entry-details search-scroll-buttons\"\n                    onClick={onClickIncreaseOffsetArtist}\n                    onMouseDown={onMouseDownPreventDefault}>\n                Next...\n                </div>}\n            <p className=\"main-title\">Albums</p>\n            {offsetAlbum > 0 &&\n                <div \n                    className=\"main-entry-details search-scroll-buttons\"\n                    onClick={onClickDecreaseOffsetAlbum}\n                    onMouseDown={onMouseDownPreventDefault}>\n                    Previous...\n                </div>}\n            {albumItems}\n            {albumItems && offsetAlbum + 5 < limitAlbum &&\n                <div \n                    className=\"main-entry-details search-scroll-buttons\"\n                    onClick={onClickIncreaseOffsetAlbum}\n                    onMouseDown={onMouseDownPreventDefault}>\n                    Next...\n                </div>}\n        </div>\n    );\n}\n\nexport default SearchResult;\n","import { useState, useEffect } from 'react';\nimport useVisibleComponent from './useVisibleComponent';\nimport SearchResult from './SearchResult';\nimport './Search.css';\n\nfunction Search(props) {\n    const { playlist, setPlaylist } = props;\n\n    const [ ref, visible, setResultVisible ] = useVisibleComponent(false);\n    const [ query, setQuery ] = useState(\"\");\n\n    useEffect(() => {\n        if (query) {\n            setResultVisible(true);\n        } else {\n            setResultVisible(false);\n        }\n    }, [ query, setResultVisible ]);\n\n    const onChangeSetQuery = e => setQuery(e.target.value);\n    const onFocusSetVisible = () => setResultVisible(true);\n\n    return (\n        <div ref={ref}>\n            <div className=\"search\">\n                <input\n                    className=\"search-searchbar main-component\"\n                    type=\"text\"\n                    placeholder=\"Search...\"\n                    value={query}\n                    onChange={onChangeSetQuery}\n                    onFocus={onFocusSetVisible}\n                />\n                {query && visible &&\n                    <SearchResult\n                        query={query.trim()}\n                        setQuery={setQuery}\n                        playlist={playlist}\n                        setPlaylist={setPlaylist}\n                        setResultVisible={setResultVisible}\n                    />\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Search;","import { useState, useEffect, useRef } from 'react';\n\nexport default function useVisibleComponent(initial) {\n    const [ isVisible, setIsVisible ] = useState(initial);\n    const ref = useRef(null);\n\n    const handleClickOutside = (event) => {\n        if (ref.current && !ref.current.contains(event.target) && isVisible) {\n            setIsVisible(false);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('click', handleClickOutside, true);\n        return () => {\n            document.removeEventListener('click', handleClickOutside, true);\n        };\n    });\n\n    return [ ref, isVisible, setIsVisible ];\n}","import Entry from '../common/Entry';\nimport Subsection from '../common/Subsection';\nimport './Playlist.css';\n\nfunction Playlist(props) {\n    const { playlist, setPlaylist } = props;\n\n    let playlistItems;\n    if (Object.keys(playlist).length === 0) {\n        playlistItems = \n            <p style={{textAlign: \"center\", alignSelf: \"center\", color: \"var(--text-color-dim)\", fontStyle: \"italic\"}}>\n                This playlist seems a bit empty... Add some songs to it through the search bar above.\n            </p>;\n    } else {\n        playlistItems = Object.keys(playlist).map((i) => {\n            const subsection = \n                <Subsection \n                    artistID={i}\n                    playlist={playlist}\n                    setPlaylist={setPlaylist} />;\n\t\n            let subName = \"\";\n\t        if (playlist[i]['discography']) {\n\t\t        subName = \"Discography\";\n\t        } else {\n\t\t        if (playlist[i]['topTracks']) {\n\t\t            subName = subName + \"Top Tracks, \";\n\t\t        };\n\n\t\t        Object.values(playlist[i]['albums']).forEach((album) => {\n\t\t            subName = subName + \"(album) \" + album + \", \";\n                });\n\n\t\t        subName = subName.slice(0, -2);\n\t        }\n    \n            return <Entry\n                key={\"playlist\" + i}\n                artistID={i}\n                mainName={playlist[i]['name']}\n                subName={subName}\n                imageUrl={playlist[i]['imageUrl']}\n                hasSubsection={true}\n                subsection={subsection}\n                playlist={playlist}\n                setPlaylist={setPlaylist}\n            />\n        });\n    }\n\n    return (\n        <div className=\"main-component playlist\">\n            <p className=\"main-title\">Current Playlist</p>\n            {playlistItems}\n        </div>\n    );\n};\n\nexport default Playlist;\n","export const options = {\n    \"client_id\": \"8e9896a45be540c3b7260c13d4abe33d\",\n    \"redirect_uri\": \"http://localhost:3000\",\n    \"playlist_description\": \"Your custom radio station, created from <insert url here>\",\n    \"enable_rate_limit\": true,\n    \"entry_count_limit\": 50,\n    \"album_count_limit\": 200,\n}\n","import { useState } from 'react';\nimport handleTokenExpiry from '../HandleTokenExpiry';\nimport { options } from '../../options';\nimport './Submit.css';\n\nfunction Submit(props) {\n    const { userID, \n            playlist, \n            playlistName, \n            setPlaylistName, \n            setPlaylistLink,\n            setAppInUsage, \n            setPlaylistCreated } = props;\n    const [ checked, setChecked ] = useState(false);\n    const onClickUpdateValue = () => setChecked(!checked);\n\n    const onClickSubmit = async () => {\n        handleTokenExpiry();\n\n        if (Object.keys(playlist).length === 0) {\n            alert(\"Your playlist is currently empty. Nothing to be done for now.\");\n        } else if (Object.keys(playlist).length > options[\"entry_count_limit\"] && options[\"enable_rate_limit\"]) {\n            let alertMessage = \"\";\n            alertMessage += `There are more than ${options[\"entry_count_limit\"]} items in your playlist. `\n            alertMessage += \"Please remove some items to free up the app.\\n\\n\"\n            alertMessage += \"Note that you can turn off rate limiting on your local build by \"\n            alertMessage += \"turning off the respective option in options.js\"\n            alert(alertMessage);\n        } else {\n            const accessToken = window.sessionStorage.getItem(\"access_token\");\n            const getRequestOptions = {\n                method: 'GET',\n                headers: {\n                    'Authorization': 'Bearer ' + accessToken,\n                }\n            };\n\n            // gathering track uris and album IDs;\n            let trackURIs = new Set([]);\n            let albumIDs = new Set([]);\n        \n            await Promise.all(Object.keys(playlist).map(async (artistID) => {\n                if (playlist[artistID][\"discography\"]) {\n                    const fetchURL = new URL(`https://api.spotify.com/v1/artists/${artistID}/albums`);\n                    fetchURL.searchParams.set('market', 'from_token');\n                    fetchURL.searchParams.set('include_groups', 'album,single');\n                    fetchURL.searchParams.set('limit', '50');\n\n                    let offset = 0;\n                    while (true) {\n                        fetchURL.searchParams.set('offset', offset);\n                \n                        const response = await handleRequest(fetchURL, getRequestOptions);\n                        const data = await response.json().catch(error => console.log(error));\n                        const items = data[\"items\"];\n                        const itemsIDs = items.map(album => album[\"id\"]);\n                        itemsIDs.forEach(id => albumIDs.add(id));\n                \n                        if (items.length < 50) {\n                            break;\n                        } else {\n                            offset += 50;\n                        }\n                    };\n                } else {\n                    Object.keys(playlist[artistID][\"albums\"]).forEach(id => albumIDs.add(id));\n\n                    if (playlist[artistID][\"topTracks\"]) {\n                        const fetchURL = new URL(`https://api.spotify.com/v1/artists/${artistID}/top-tracks`);\n                        fetchURL.searchParams.set('market', 'from_token');\n\n                        const response = await handleRequest(fetchURL, getRequestOptions);\n                        const data = await response.json().catch(error => console.log(error));\n                        data[\"tracks\"].forEach((track) => {\n                            trackURIs.add(track[\"uri\"]);\n                        }); \n                    };\n                }\n            }));\n\n            // another early rate limit\n            if (options[\"enable_rate_limit\"] && albumIDs.size > options[\"album_count_limit\"]) {\n                let alertMessage = \"\";\n                alertMessage += `There are more than ${options[\"album_count_limit\"]} albums/eps/singles in your playlist. `\n                alertMessage += \"(don't add Viper pls.) Please remove some items to free up the app.\\n\\n\"\n                alertMessage += \"Note that you can turn off rate limiting on your local build by \"\n                alertMessage += \"turning off the respective option in options.js\"\n                alert(alertMessage);\n            } else {\n                // switch to loading view\n                setAppInUsage(false);\n\n                // populate trackuris\n                await Promise.all(Array.from(albumIDs).map(async (albumID) => {\n                    const albumURIs = await getAlbumTrackURIs(getRequestOptions, albumID);\n                    trackURIs = new Set([...trackURIs, ...albumURIs]);\n                }))\n\n                // make the playlist\n                const finalPlaylistName = playlistName ? playlistName : \"Custom Radio Station\";\n                setPlaylistName(finalPlaylistName);\n                const createPlaylistJSON = {\n                    name: finalPlaylistName,\n                    public: checked,\n                    description: options[\"playlist_description\"]\n                }\n                const createRequestOptions = {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': 'Bearer ' + accessToken,\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(createPlaylistJSON)\n                };\n                const createURL = new URL(`https://api.spotify.com/v1/users/${userID}/playlists`);\n                const response = await handleRequest(createURL, createRequestOptions);\n                const data = await response.json().catch(error => console.log(error));\n                const playlistID = data[\"id\"];\n                setPlaylistLink(data[\"external_urls\"][\"spotify\"]);\n\n                let trackURIIndex = 0;\n                const trackURIArray = Array.from(trackURIs);\n                const addTracksURL = new URL(`https://api.spotify.com/v1/playlists/${playlistID}/tracks`);\n                while (trackURIIndex < trackURIArray.length) {\n                    const addTracksJSON = {\n                        uris: trackURIArray.slice(trackURIIndex, trackURIIndex + 100),\n                    };\n\n                    const addRequestOptions = {\n                        method: 'POST',\n                        headers: {\n                            'Authorization': 'Bearer ' + accessToken,\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify(addTracksJSON)\n                    };\n                    const response = await handleRequest(addTracksURL, addRequestOptions);\n                    const data = await response.json().catch(error => console.log(error));\n\n                    trackURIIndex += 100;\n                }\n            }\n\n            // update finished state\n            setPlaylistCreated(true);\n        }\n    };\n\n    const onChangeUpdatePlaylistName = e => setPlaylistName(e.target.value);\n\n    return (\n        <div className=\"submit\">\n            <input\n                type=\"text\"\n                value={playlistName}\n                placeholder=\"Playlist Name...\"\n                onChange={onChangeUpdatePlaylistName}\n                style={{\n                    height: \"25px\"\n                }}\n            />\n            <div className=\"submit-public\">\n                <input\n                    type=\"checkbox\"\n                    checked={checked}\n                    onClick={onClickUpdateValue}\n                />\n                <div\n                    onClick={onClickUpdateValue}\n                    style={{\n                        cursor: \"pointer\"\n                    }}>\n                    Make Playlist Public?\n                </div>\n            </div>\n            <div \n                className=\"submit-button main-component\"\n                onClick={onClickSubmit}>\n                Submit\n            </div>\n        </div>\n    );\n}\n\nasync function handleRequest(fetchURL, requestOptions) {\n    let response;\n    while (true) {\n        response = await fetch(fetchURL.href, requestOptions).catch(error => {console.log(error)});\n        if (response.ok) {\n            break;\n        } else {\n            // too many requests\n            if (response.status === 429) {\n                const timeout = parseInt(response.headers.get(\"retry-after\"), 10);\n                await new Promise(r => setTimeout(r, timeout));\n            } else if (response.status === 403) {\n                window.sessionStorage.removeItem(\"authorized\");\n                window.sessionStorage.removeItem(\"access_token\");\n                window.sessionStorage.removeItem(\"access_token_timestamp\");\n                alert(\"Your login token has expired, probably. Please login again.\");\n                window.location.reload();\n            }\n        }\n    }\n\n    return response;\n}\n\nasync function getAlbumTrackURIs(requestOptions, albumID) {\n    let trackURIs = new Set([]);\n\n    const fetchURL = new URL(`https://api.spotify.com/v1/albums/${albumID}/tracks`);\n    fetchURL.searchParams.set('market', 'from_token');\n    fetchURL.searchParams.set('limit', '50');\n\n    let offset = 0;\n    while (true) {\n        fetchURL.searchParams.set('offset', offset);\n\n        const response = await handleRequest(fetchURL, requestOptions);\n        const data = await response.json().catch(error => console.log(error));\n        const items = data[\"items\"];\n\n        items.forEach((track) => {\n            trackURIs.add(track[\"uri\"]);\n        });\n\n        if (items.length < 50) {\n            break;\n        } else {\n            offset += 50;\n        }\n    }\n\n    return trackURIs;\n}\n\nexport default Submit;\n","function Footer(props) {\n    const { footerText, selfAdvertising } = props;\n\n    let text;\n    if (selfAdvertising) {\n        const githubURL = \"https://github.com/tquang1708/spotify-custom-radio/issues\";\n        text =\n        <div>\n            Created by Quang Tran, October 2021. Forward all your bug reports and/or suggestions to <a href={githubURL}>here.</a>\n        </div>\n    } else {\n        text = <div>{footerText}</div>;\n    }\n\n    return (\n        <div\n            style={{\n                color: \"var(--text-color-dim)\",\n                position: \"fixed\",\n                zIndex: \"-1\",\n                bottom: \"5px\",\n                right: \"5px\",\n                fontSize: \"0.7em\",\n                textAlign: \"right\"\n            }} >\n            {text}\n        </div>\n    );\n}\n\nexport default Footer;","import Footer from '../Footer';\nimport '../App.css';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Outro(props) {\n    const { playlistCreated, \n            playlistName, \n            playlistLink,\n            setAppInUsage,\n            setPlaylistCreated } = props;\n    const [ loadingText, setLoadingText ] = useState(\".\");\n\n    useEffect(() => {\n        function updateLoadingText() {\n            if (loadingText.length === 5) {\n                setLoadingText(\".\");\n            } else {\n                setLoadingText(loadingText + \".\");\n            }\n        }\n\n        const intervalID = setInterval(updateLoadingText, 350);\n\n        return () => {\n            clearInterval(intervalID);\n        };\n    }, [ loadingText ]);\n\n    const onClickResetState = () => {\n        setAppInUsage(true);\n        setPlaylistCreated(false);\n        window.location.reload();\n    };\n\n    if (!playlistCreated) {\n        let disclaimer = \"It might take a while to build the playlist for larger playlists \";\n        disclaimer += \"or during times when the site is busy due to rate limiting on \"\n        disclaimer += \"Spotify's API.\"\n\n        return (\n            <div className=\"center-text\">\n                <p\n                    style={{\n                        color: \"var(--text-color)\",\n                        fontWeight: \"bold\",\n                        textAlign: \"center\"\n                    }}>\n                    Constructing <span style={{color: \"var(--highlight-color)\"}}>Playlist</span><br/>{loadingText}\n                </p>\n                <Footer footerText={disclaimer} />\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"center-text\">\n                <p\n                    style={{\n                        color: \"var(--text-color)\",\n                        fontWeight: \"bold\",\n                        textAlign: \"center\"\n                    }}>\n                    Playlist <a href={playlistLink} target=\"_blank\" rel=\"noreferrer\" >{playlistName}</a> Created!\n                    <Link to=\"/\" onClick={onClickResetState}>&nbsp;Create Another playlist?</Link>\n                </p>\n                <Footer selfAdvertising={true} />\n            </div>\n        );\n    }\n}\n\nexport default Outro;","import { useState, useEffect } from 'react';\nimport UserInfo from './userinfo/UserInfo';\nimport Search from './search/Search';\nimport Playlist from './playlist/Playlist';\nimport Submit from './submit/Submit';\nimport Outro from '../outro/Outro';\nimport Footer from '../Footer';\nimport './Main.css';\n\nfunction Main() {\n    const [ playlist, setPlaylist ] = useState({});\n    const [ userID, setUserID ] = useState(\"\");\n    const [ playlistName, setPlaylistName ] = useState(\"\");\n    const [ playlistLink, setPlaylistLink ] = useState(\"\");\n    const [ appInUsage, setAppInUsage ] = useState(true);\n    const [ playlistCreated, setPlaylistCreated ] = useState(false);\n\n    useEffect(() => {\n        setTimeout(() => {\n            window.sessionStorage.removeItem(\"authorized\");\n            window.sessionStorage.removeItem(\"access_token\");\n            window.sessionStorage.removeItem(\"access_token_timestamp\");\n            alert(\"Your login token has expired. Please login again.\");\n            window.location.reload()\n\t    }, 3300000);\n    }, []);\n\n    if (appInUsage) {\n        let disclaimer = \"\";\n        disclaimer += \"Note that the Discography option only includes all Albums, \"\n        disclaimer += \"Singles and EPs and do not include Compilations or Apperances \"\n        disclaimer += \"on other artists' albums.\";\n\n        return (<div className=\"main\">\n            <UserInfo \n                setUserID={setUserID} />\n            <Search\n                playlist={playlist}\n                setPlaylist={setPlaylist} />\n            <Playlist\n                playlist={playlist} \n                setPlaylist={setPlaylist} />\n            <Submit\n                userID={userID}\n                playlist={playlist}\n                playlistName={playlistName}\n                setPlaylistName={setPlaylistName}\n                setPlaylistLink={setPlaylistLink}\n                setAppInUsage={setAppInUsage}\n                setPlaylistCreated={setPlaylistCreated} />\n            <Footer footerText={disclaimer} />\n        </div>\n        );\n    } else {\n        return(\n            <Outro \n                playlistName={playlistName}\n                playlistLink={playlistLink}\n                playlistCreated={playlistCreated}\n                setAppInUsage={setAppInUsage}\n                setPlaylistCreated={setPlaylistCreated} />\n        );\n    };\n}\n\nexport default Main;\n","import Footer from '../Footer';\nimport '../App.css';\nimport { options } from '../options';\n\n// taken from https://github.com/spotify/web-api-auth-examples/blob/master/implicit_grant/public/index.html\nfunction generateRandomString(length) {\n    var text = '';\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (var i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    };\n\n    return text;\n};\n\nfunction Intro() {\n    const spotifyState = generateRandomString(16);\n    const scope = \"playlist-modify-private playlist-modify-public user-read-private\";\n\n    const authorizeURL = new URL(`https://accounts.spotify.com/authorize`);\n    authorizeURL.searchParams.set('client_id', options['client_id']);\n    authorizeURL.searchParams.set('redirect_uri', options['redirect_uri']);\n    authorizeURL.searchParams.set('response_type', 'token');\n    authorizeURL.searchParams.set('state', spotifyState);\n    authorizeURL.searchParams.set('scope', scope);\n\n    sessionStorage.setItem('spt_auth_state', spotifyState);\n\n    return (\n        <div className=\"center-text\">\n            <div className=\"main-title \">\n                <a href={authorizeURL.href}>\n                    Login to Spotify\n                </a>&nbsp;to begin\n            </div>\n            <Footer selfAdvertising={true} />\n        </div>\n    );\n}\n\nexport default Intro;","import { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nfunction Callback(props) {\n    const { setHasError, setAuthorized } = props;\n\n    const response = new URLSearchParams(window.location.hash.substring(1));\n\n    const spotifyState = sessionStorage.getItem(\"spt_auth_state\");\n    const access_token = response.get(\"access_token\");\n    const error = response.get(\"error\");\n    const responseState = response.get(\"state\");\n\n    const valid = access_token && (spotifyState === responseState);\n    // const valid = false;\n\n    useEffect (() => {\n        if (valid) {\n            sessionStorage.setItem(\"authorized\", \"true\");\n            sessionStorage.setItem(\"access_token\", access_token);\n            sessionStorage.setItem(\"access_token_timestamp\", Date.now());\n            sessionStorage.removeItem(\"spt_auth_state\");\n            setAuthorized(true);\n        } else {\n            console.log(error);\n            setHasError(true);\n        }\n    });\n\n    if (valid) {\n        return <Redirect to=\"/\"/>\n    } else {\n        return <Redirect to=\"/error\"/>\n    };\n};\n\nexport default Callback;","import { Link } from 'react-router-dom';\n\nfunction Error() {\n    return (\n        <div className=\"main-title intro\">\n            An error occurred. Please try to <Link to=\"/\">login again.</Link>\n        </div>\n    );\n}\n\nexport default Error;","import { useState } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport './App.css';\nimport Main from './main/Main';\nimport Intro from './intro/Intro';\nimport Callback from './intro/Callback';\nimport Error from './intro/Error';\n\nfunction App() {\n    const [ hasError, setHasError ] = useState(false);\n    const [ authorized, setAuthorized ] = useState(false);\n    const authorizedSession = sessionStorage.getItem('authorized');\n\n    return (\n        <Switch>\n            <Route exact path=\"/\">\n                {authorized || authorizedSession === \"true\" ? <Main /> : <Intro />}\n            </Route>\n            <Route path=\"/error\">\n                {hasError ? <Error /> : <Redirect to=\"/\" />}\n            </Route>\n            <Route path=\"/callback\">\n                <Callback\n                    setAuthorized={setAuthorized}\n                    setHasError={setHasError}\n                />\n            </Route>\n        </Switch>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'; \n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}